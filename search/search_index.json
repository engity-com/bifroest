{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Engity's Bifr\u00f6st","text":""},{"location":"#welcome","title":"Welcome","text":"<p>Bifr\u00f6st (spoken as \"Bee-frest\"), is a highly customizable SSH server with several ways to authorize a user and where and how to execute its session. It can be used as a drop-in-replacement for OpenSSH's sshd, but it was actually created with some more advanced stuff in mind; see below.</p>"},{"location":"#features","title":"Features","text":""},{"location":"#ssh-protocol-compliant","title":"SSH protocol compliant","text":"<p>Fully SSH protocol compliant server, like you would expect.</p>"},{"location":"#openid-connect","title":"OpenID Connect","text":"<p>You can connect via your SSH keys, as usually. And so on...</p> <p>...but you can also use OpenID Connect (or OAuth2) identity provider. The best thing about it: In contrast to the other SSH servers with OpenID Connect you don't need to install another client in addition to your regular SSH Client (OpenSSH, PuTTy, ...).</p>"},{"location":"#docker-environments","title":"Docker environments","text":"<p>You can execute your users into individual Docker containers with custom images, network settings, and much more...</p>"},{"location":"#kubernetes-environments","title":"Kubernetes environments","text":"<p>Be directly inside a dedicated Pod inside your Kubernetes cluster and have access to all of its resources without extra port forwarding.</p>"},{"location":"#remember-me","title":"Remember me","text":"<p>Once authenticated using a public key, Bifr\u00f6st can (temporarily) store that public key for faster reconnection while the session is still active.</p>"},{"location":"#automatic-user-provisioning","title":"Automatic user provisioning","text":"<p>If a user needs to be authorized in a local environment using OpenID Connect, Bifr\u00f6st can automatically create a local user based on a pre-defined requirement template.</p> <p>Bifr\u00f6st can also automatically clean up these local users once they are no longer needed. For example: If their session times out after a defined idle-time, the local user, their home directory, and all running processes can be cleaned up.</p>"},{"location":"#more-to-come","title":"More to come...","text":""},{"location":"#more-topics","title":"More topics","text":"<ul> <li>Getting started</li> <li>Use-Cases</li> <li>Configuration</li> </ul>"},{"location":"usecases/","title":"Use cases","text":"<p>Bifr\u00f6st helps IT admins to administer servers much faster, more secure, with more options, and much more flexible than without using Bifr\u00f6st. A big advantage of Bifr\u00f6st is the simple and flexible configuration (see configuration documentation). Below, you find some use-cases showing that Bifr\u00f6st makes the difference:</p> <ol> <li>Off-board users within the legally binding 15 minutes timeframe of the organization</li> <li>On-board users within 15 minutes in the organization</li> <li>Bastion Host / Jump Host</li> <li>Access Kubernetes clusters without publicly exposing their APIs</li> <li>Isolated Demo/Training environments</li> <li>Different rules for different user groups per host</li> <li>Drop-in-Replacement</li> </ol> <p>Tip</p> <p>We're planning to also implement an SSH server chaining / transparent proxy for SSH and Session recording. This will soon create much more use-cases. \ud83e\udd20</p>"},{"location":"usecases/#offboard","title":"Off-board users within the legally binding 15 minutes timeframe of the organization","text":""},{"location":"usecases/#problem","title":"Problem","text":"<ol> <li>Assume you're part of an organization.</li> <li>Assume this organization has more than just 10 people who might be able to access SSH resources.</li> <li>Assume you've to off-board an employee, now.</li> <li>Assume it is your job to make sure that this employee cannot do any harm to the organization, because the machines the user is currently on are critical to the technical security of the organization.</li> </ol> <p>In cases of SSH servers, this often results in going through all servers and either:</p> <ul> <li>Change the passwords,</li> <li>Remove dedicated users,</li> <li>Remove user's public keys (if you can find out who it is \ud83e\udd2f),</li> <li>or change the Ansible or Puppet configuration and apply it on every machine.</li> </ul> <p>How this should be done within the legally binding 15 minutes timeframe AND NOT over days or weeks? How do you ensure you really removed this user everywhere?</p>"},{"location":"usecases/#solution","title":"Solution","text":""},{"location":"usecases/#dont","title":"Don't ...","text":"<ol> <li>... have users installed on the systems itself.</li> <li>... share passwords of shared users or even the <code>root</code> user.</li> <li>... have user's public keys stored at shared users or even the <code>root</code> user.</li> </ol>"},{"location":"usecases/#do","title":"Do","text":"<p>Use the OpenID Connect authorization.</p> <p>As the users are always authorized by your Identity Provider (IdP), their access rights are always evaluated when someone tries to access the service via SSH. If the IdP rejects the authorization, Bifr\u00f6st will also immediately reject the authorization to this service. Depending on the residual duration of the off-token, the user rights are taken away within a maximum timeframe of 15 minutes.</p> <p>There is no need to access any of these services directly to remove/de-authorize these users.</p> <p>If the environments are configured accordingly (default setting) all the user's files and processes will be removed/killed automatically, too.</p>"},{"location":"usecases/#onboard","title":"On-board users within 15 minutes in the organization","text":"<p>This is quite similar to Off-board users within the legally binding 15 minutes of the organization, but obviously reverse.</p>"},{"location":"usecases/#problem_1","title":"Problem","text":"<ol> <li>Assume you're part of an organization.</li> <li>Assume this organization has more than just 10 people who might be able to access SSH resources.</li> <li>Assume you need to on-board an employee immediately.</li> <li>Assume you have to ensure that this employee can access all services with no delay.</li> </ol> <p>In case of SSH servers, this often results in going through all servers and either:</p> <ul> <li>Share the server shared-user passwords,</li> <li>Add user's public key to a shared user,</li> <li>Add a dedicated user (with password or authorized key),</li> <li>or changing the Ansible or Puppet configuration and apply it at every machine.</li> </ul> <p>How can this be done quickly AND NOT in days or weeks? Often admins have to ask themselves: \"Did I really give them access everywhere?\"</p>"},{"location":"usecases/#solution_1","title":"Solution","text":"<p>Use the OpenID Connect authorization.</p> <p>There is no need to create them somewhere on the server itself. The OIDC authorization will do that using the configured Identity Provider (IdP) - that's it!</p> <p>There is no need to access any of these services directly to create/authorize these users.</p> <p>If the environments are configured accordingly (default setting), all the user's resources (like the home directory) will be automatically created.</p>"},{"location":"usecases/#bastion","title":"Bastion Host / Jump Host","text":""},{"location":"usecases/#problem_2","title":"Problem","text":"<ol> <li>Assume you have to manage resources.</li> <li>These resources are not directly accessible to you. They are protected within other networks to which you have no direct access. For example, you're sitting at home and there's another service inside an [AWS private VPC]. (https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html).</li> <li>You have to manage that service.</li> </ol> <p>The following cases are usually used:</p> <ul> <li>You need to start a VPN connection with a VPN server to get a direct connection to this network. Either you have to deal with quirky VPN desktop client software or the SSO isn't working (which might only make sense for small organizations).</li> <li>There is a bastion host in-place, based on OpenSSH sshd which will run into on-boarding and off-boarding issues.</li> </ul>"},{"location":"usecases/#solution_2","title":"Solution","text":"<ol> <li>Set up a bastion host, either:<ol> <li>Inside the private network itself (in case of AWS a dedicated EC2 instance for example of instance-type <code>t2.micro</code>)</li> <li>or outside the network with a fixed VPN connection to get inside the private network.</li> </ol> </li> <li>Configure your preferred authorization (for example OpenID Connect for best on-boarding and off-boarding experience).</li> <li>Plus: If you're using the docker environment, you also gain the maximum possible security by environment isolation.</li> </ol>"},{"location":"usecases/#kubernetes-firewall","title":"Access Kubernetes clusters without publicly exposing their APIs","text":""},{"location":"usecases/#problem_3","title":"Problem","text":"<ol> <li>Assume you have one or more Kubernetes clusters.</li> <li>There kubernetes clusters should be accessed by your developers and/or support agents to do development and debugging work.</li> <li>The people who should access this can be located inside the office (with protected networks) but also in untrusted environments like working from home.</li> </ol> <p>Usually, you either make the Kubernetes cluster's API directly accessible over the internet and secure them with (hopefully) secure secrets or shield them behind firewalls. In these cases every person who wants to access the cluster API then has to use a VPN software to access the cluster's API which also introduce other issues in usability, costs and complexity.</p>"},{"location":"usecases/#solution_3","title":"Solution","text":"<ol> <li>Have a Bifr\u00f6st instance inside your protected network, which port 22 is exposed to the internet.</li> <li>Protect the access with every mechanism you like OpenID Connect.</li> <li>Pick an OCI/Docker image which holds kubectl.</li> <li>Configure the kubernetes environment with a kubeconfig which is able to access the Kubernetes cluster inside your network.</li> </ol> <p>As a result your people can easily use a default SSH agent with OpenID Connect to access a kubectl instance which is able to control your cluster without exposing your cluster directly to the public internet.</p> <p>As a plus, the users accessing this instance have easier access to the resources like databases and rest APIs inside Kubernetes, because they can directly use the cluster internal domain names, instance <code>kubectl port-forward</code>.</p>"},{"location":"usecases/#demos","title":"Isolated Demo/Training environments","text":""},{"location":"usecases/#problem_4","title":"Problem","text":"<ol> <li>Assume you want to show how your software can be used (demonstration) or you want to create training sessions for users.</li> <li>You need an environment where your users can easily have command interaction with.</li> <li>Each user needs a dedicated and isolated environment.</li> <li>You want to provide your own set of tools within these environments.</li> </ol>"},{"location":"usecases/#solution_4","title":"Solution","text":"<ol> <li>Choose your favorite authorization mechanism, such as:<ol> <li>OpenID Connect to ensure, that only users are already registered at your application are able to connect to your service or even using public social accounts like GitHub or Google to freely connect to your service.</li> <li>Maybe you want to use fixed passwords.</li> <li> Disable any kind of password request, which is only recommended for these kinds of purposes, nothing else. In this case, you can use the none authorization.</li> </ol> </li> <li>Create an OCI/Docker image with the applications you want to show.</li> <li>Configure the kubernetes environment or the docker environment with a reference to your own image.</li> </ol>"},{"location":"usecases/#multi-environment","title":"Different rules for different user groups per host","text":""},{"location":"usecases/#problem_5","title":"Problem","text":"<ol> <li>Assume you have an SSH server.</li> <li>Different users should be authorized differently.</li> <li>Different users should run in different environments (one in a local environment with permission A, another with permission B, and a third user in a remote environment).</li> </ol> <p>This is almost impossible with current technologies except with different OpenSSH sshd setups on a host, or even different hosts, or hacked PAM or shell set-ups.</p>"},{"location":"usecases/#solution_5","title":"Solution","text":"<p>Use Bifr\u00f6st with multiple configured flows. Each flow can handle different authorizations and environments.</p>"},{"location":"usecases/#drop-in-replacement","title":"Drop-in-Replacement","text":"<p>You simply want to use something else than OpenSSH sshd, Bifr\u00f6st will do this, too. \ud83d\ude09 Just use this configuration.</p>"},{"location":"usecases/#more-topics","title":"More topics","text":"<ul> <li>Configuration</li> <li>Features</li> </ul>"},{"location":"community/","title":"Community","text":"<p>You are a part of making Bifr\u00f6st great. Thank you! \ud83d\udcaa</p> <p>To be part of this community, be sure you read our Contributor Covenant Code of Conduct.</p>"},{"location":"community/#discussions","title":"Discussions","text":"<p>We're using GitHub Discussion for conversations about how to use Bifr\u00f6st, for exchanging ideas, for doing announcements and much more.</p> <ul> <li>See existing topics.</li> <li>Start a new topic.</li> </ul>"},{"location":"community/#submitting-issues","title":"Submitting Issues","text":"<p>Issues are perfect for requesting a feature/enhancement or reporting a suspected bug. We use the GitHub issue tracker to keep track of issues in Bifr\u00f6st.</p> <p>The process of sorting and checking the issues is a daunting task and requires a lot of work. To help maintainers (and other community members) to quickly and effortlessly understand what you need, be sure to read the instructions of the issues templates carefully.</p> <p>You can submit new issues here.</p>"},{"location":"community/#submitting-prs","title":"Submitting PRs","text":"<p>Please read our contributing guidelines to start submitting your changes to Bifr\u00f6st.</p>"},{"location":"community/code-of-conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"community/code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"community/code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"community/code-of-conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"community/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"community/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at hello@engity.com. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"community/code-of-conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"community/code-of-conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"community/code-of-conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"community/code-of-conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"community/code-of-conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"community/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ. Other translations are available here.</p>"},{"location":"community/contributing/","title":"Contributing","text":""},{"location":"community/contributing/#description-technical-contributions-to-bifrost-and-corresponding-guidelines","title":"description: &gt;Technical contributions to Bifr\u00f6st and corresponding guidelines.","text":""},{"location":"community/contributing/#contributing-guidelines","title":"Contributing Guidelines","text":"<p>Contributions are welcome via GitHub Pull Requests (\"PR\"). This document outlines the process to help you get your contribution accepted.</p> <p>Any kind of contribution is welcome, from adding new features or bug fixes to improving the documentation. However, Engity will review the proposals and perform a triage over them. By doing so, we will ensure that the most valuable contributions for the community will be implemented in due time.</p>"},{"location":"community/contributing/#how-to-contribute","title":"How to Contribute","text":"<ol> <li>Fork this repository, develop, and test your changes.</li> <li>Submit a pull request.</li> <li>Read and agree to our Contributor License Agreement as requested in the pull request.</li> </ol>"},{"location":"community/contributing/#technical-requirements","title":"Technical Requirements","text":"<p>When submitting a Pull Request (\"PR\"), make sure that it:</p> <ul> <li>Must pass CI jobs/actions.</li> <li>Must follow Golang best practices.</li> <li> <p>Is signed off with the line <code>Signed-off-by: &lt;Your-Name&gt; &lt;Your-email&gt;</code>. Learn more about signing off on commits.</p> <p>Note</p> <p>Signing-off a commit is different from signing a commit, such as with a GPG key.</p> </li> </ul>"},{"location":"community/contributing/#pr-approval","title":"PR Approval","text":"<ol> <li>Changes are manually reviewed by Engity's Bifr\u00f6st team members.</li> <li>When the PR passes all tests, the PR is merged by the reviewer(s) in the GitHub <code>main</code> branch.</li> </ol>"},{"location":"community/contributing/#release-process","title":"Release process","text":""},{"location":"community/contributing/#schedule","title":"Schedule","text":"<p>There are no fixed cycles for releases. Currently, they are triggered as soon as bugfixes, security updates or main features arrive.</p>"},{"location":"community/contributing/#creation","title":"Creation","text":"<p>First of all, prepare the release notes as usual and merge them.</p> <p>Once the release notes are ready, a release train is launched by tagging from <code>main</code> to <code>vX.Y.Z</code>.</p>"},{"location":"community/contributing/#validation","title":"Validation","text":"<p>The <code>vX.Y.Z</code> tag will go through the release CI.</p>"},{"location":"legal/license/","title":"License","text":"<p>Note</p> <p>This is a copy of the original license file which can be found here.</p> <pre>\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</pre>"},{"location":"reference/","title":"Introduction","text":""},{"location":"reference/#concept","title":"Concept","text":"<p>Bifr\u00f6st does have the following important entities:</p> <ol> <li> <p>Connection which is established by the user's SSH client to Bifr\u00f6st.</p> </li> <li> <p>Authorization are used to authorize the user and acquire more relevant information, needed for successful execution.</p> </li> <li> <p>Environment is the place where the user's session is executed in; the target shell where to user executes its tasks.</p> </li> <li> <p>The Session will be created for the user when the authorization was successful and an environment can be created. It is used to identify the current connection and any subsequent session.</p> </li> <li> <p>Bifr\u00f6st can have one or more Flows. This can define different combinations of authorizations and environments based on different rules. This is comparable with Virtual hosting like HTTP server are already providing it for years.</p> </li> </ol>"},{"location":"reference/#next-topics","title":"Next topics","text":"<ol> <li>Installation</li> <li>Configuration</li> <li>Command line interface (CLI)</li> </ol>"},{"location":"reference/alternatives/","title":"Alternatives","text":"<p>Defines how Bifr\u00f6st reaches alternatives of itself.</p> <p>For example if itself runs currently runs on AMD64 architecture, but needs for a target system an ARM64 instance. Or if the host is Windows, but the target is Linux.</p> <p>Especially if a containerized environment (like Docker environment) is used, some features requires a supporting process that runs directly inside the container to enable all features. Such as tcp portforward from the context of the container or SSH Agent forward.</p>"},{"location":"reference/alternatives/#properties","title":"Properties","text":""},{"location":"reference/alternatives/#property-downloadUrl","title":"<code>downloadUrl</code>","text":"<p>URL Alternative Binary = </p> <pre><code>\"https://github.com/engity-com/bifroest/releases/download/v{{.version}}/bifroest-{{.os}}-{{.arch}}-{{.edition}}{{.packageExt}}\"\n</code></pre> <p>URL where to download the alternative version of Bifr\u00f6st. Usually we simply will get this from the GitHub Releases of Bifr\u00f6st.</p>"},{"location":"reference/alternatives/#property-location","title":"<code>location</code>","text":"<p>File Path Alternative Binary = <code>\"&lt;os specific&gt;\"</code></p> <p>Location to store the downloaded alternative version of Bifr\u00f6st at.</p> <p>A file that already exists, will not be downloaded again.</p> <p>The default value is different, depending on the platform Bifr\u00f6st runs on:</p> <ul> <li>Linux: <code>/var/lib/engity/bifroest/binaries/{{.version}}/{{.os}}-{{.arch}}-{{.edition}}{{.ext}}</code></li> <li>Window: <code>C:\\ProgramData\\Engity\\Bifroest\\binaries\\{{.version}}\\{{.os}}-{{.arch}}-{{.edition}}{{.ext}}</code></li> </ul>"},{"location":"reference/cli/","title":"Command line interface (CLI)","text":"<p>Bifr\u00f6st is usually available via its <code>bifroest</code> command on each operating system.</p>"},{"location":"reference/cli/#run","title":"Running the server","text":"<p>Syntax: <code>bifroest run [flags]</code></p>"},{"location":"reference/cli/#run-flags","title":"Flags","text":"<p>Includes all general flags.</p>"},{"location":"reference/cli/#run-flag-configuration","title":"<code>--configuration</code>","text":"<p><code>-c</code>File Path&lt;Configuration&gt; = <code>\"&lt;os specific&gt;\"</code></p> <p>The default value varies depending on the platform Bifr\u00f6st runs on:</p> <ul> <li>Linux: <code>/etc/engity/bifroest/configuration.yaml</code></li> <li>Windows: <code>C:\\ProgramData\\Engity\\Bifroest\\configuration.yaml</code></li> </ul>"},{"location":"reference/cli/#version","title":"Show version","text":"<p>Syntax: <code>bifroest verion [flags]</code></p>"},{"location":"reference/cli/#version-flags","title":"Flags","text":"<p>Includes all general flags.</p>"},{"location":"reference/cli/#service","title":"Service management","text":"<p>Note</p> <p>Only available on Windows.</p>"},{"location":"reference/cli/#service-install","title":"Installation","text":"<p>Installation of Bifr\u00f6st as service inside the operating system, which will let it run upon system start and with full privileges.</p> <p>Syntax: <code>bifroest service install [flags]</code></p>"},{"location":"reference/cli/#service-install-flags","title":"Flags","text":"<p>Includes all general flags.</p>"},{"location":"reference/cli/#service-install-flag-name","title":"<code>--name</code>","text":"<p>string = <code>\"engity-bifroest\"</code></p> <p>Name of the service.</p>"},{"location":"reference/cli/#service-install-flag-configuration","title":"<code>--configuration</code>","text":"<p><code>-c</code>File Path&lt;Configuration&gt; = </p> <pre><code>\"C:\\\\ProgramData\\\\Engity\\\\Bifroest\\\\configuration.yaml\"\n</code></pre> <p>Configuration location to use for the installed service.</p>"},{"location":"reference/cli/#service-install-flag-start","title":"<code>--start</code>","text":"<p>bool = <code>true</code></p> <p>If installed, should it be started immediately. This calls implicitly <code>bifroest service start</code>.</p>"},{"location":"reference/cli/#service-remove","title":"Removal","text":"<p>Will remove an installed service instance of Bifr\u00f6st from the operating system.</p> <p>Syntax: <code>bifroest service remove [flags]</code></p>"},{"location":"reference/cli/#service-remove-flags","title":"Flags","text":"<p>Includes all general flags.</p>"},{"location":"reference/cli/#service-remove-flag-name","title":"<code>--name</code>","text":"<p>string = <code>\"engity-bifroest\"</code></p> <p>Name of the service.</p>"},{"location":"reference/cli/#service-remove-flag-stop","title":"<code>--stop</code>","text":"<p>bool = <code>true</code></p> <p>Same as calling <code>bifroest service stop</code> before this command.</p>"},{"location":"reference/cli/#service-start","title":"Start","text":"<p>Will start the installed service instance of Bifr\u00f6st.</p> <p>Syntax: <code>bifroest service start [flags]</code></p>"},{"location":"reference/cli/#service-start-flags","title":"Flags","text":"<p>Includes all general flags.</p>"},{"location":"reference/cli/#service-start-flag-name","title":"<code>--name</code>","text":"<p>string = <code>\"engity-bifroest\"</code></p> <p>Name of the service.</p>"},{"location":"reference/cli/#service-stop","title":"Stop","text":"<p>Will stop the installed service instance of Bifr\u00f6st (if running).</p> <p>Syntax: <code>bifroest service stop [flags]</code></p>"},{"location":"reference/cli/#service-stop-flags","title":"Flags","text":"<p>Includes all general flags.</p>"},{"location":"reference/cli/#service-stop-flag-name","title":"<code>--name</code>","text":"<p>string = <code>\"engity-bifroest\"</code></p> <p>Name of the service.</p>"},{"location":"reference/cli/#general","title":"General","text":""},{"location":"reference/cli/#general-flags","title":"Flags","text":""},{"location":"reference/cli/#flag-log.level","title":"<code>--log.level</code>","text":"<p>Log Level = <code>\"INFO\"</code></p> <p>Defines the minimum level at which the log messages will be logged.</p>"},{"location":"reference/cli/#flag-log.format","title":"<code>--log.format</code>","text":"<p>Log Format = <code>\"text\"</code></p> <p>In which format the log output should be printed.</p>"},{"location":"reference/cli/#flag-log.colorMode","title":"<code>--log.colorMode</code>","text":"<p>Log Color Mode = <code>\"auto\"</code></p> <p>Tells whether to log in color or not.</p>"},{"location":"reference/cli/#flag-version","title":"<code>--version</code>","text":"<p>Same as using sub-command <code>version</code>.</p>"},{"location":"reference/configuration/","title":"Configuration","text":"<p>Bifr\u00f6st will be configured in the YAML language.</p> <p>By default, the configuration is taken from the following location:</p> <ul> <li>Linux: <code>/etc/engity/bifroest/configuration.yaml</code></li> <li>Windows: <code>C:\\ProgramData\\Engity\\Bifroest\\configuration.yaml</code></li> </ul> <p>This location can be changed by the <code>--configuration=&lt;path&gt;</code> flag when executing: <pre><code>bifroest run --configuration=/my/config.yaml\n</code></pre></p>"},{"location":"reference/configuration/#properties","title":"Properties","text":""},{"location":"reference/configuration/#property-ssh","title":"<code>ssh</code>","text":"<p>SSH</p> <p>Defines how the SSH connections itself will behave.</p>"},{"location":"reference/configuration/#property-session","title":"<code>session</code>","text":"<p>Session</p> <p>Defines where and how the sessions inside Bifr\u00f6st are handled.</p>"},{"location":"reference/configuration/#property-flows","title":"<code>flows</code>","text":"<p>Flow </p> <p>Defines which flows are evaluated for user sessions.</p>"},{"location":"reference/configuration/#property-housekeeping","title":"<code>housekeeping</code>","text":"<p>Housekeeping</p> <p>Defines how Bifr\u00f6st will clean up its sessions and connections.</p>"},{"location":"reference/configuration/#property-alternatives","title":"<code>alternatives</code>","text":"<p>Alternatives</p> <p>Defines how the imp (if needed) behaves to help to bridge context boundaries, for example to enable port-forwarding into an OCI container.</p>"},{"location":"reference/configuration/#property-startMessage","title":"<code>startMessage</code>","text":"<p>string  Core = <code>\"\"</code></p> <p>If defined this message will be displayed in the log files of Bifr\u00f6st on startup.</p>"},{"location":"reference/configuration/#examples","title":"Examples","text":"<ol> <li> <p>Simple:     <pre><code>ssh:\n  addresses: [ \":22\" ]\n  # ...\nsession:\n  type: fs\n  # ...\nflows:\n  - name: local\n    # ...\nhousekeeping:\n  # ...\nalternatives:\n  # ...\nstartMessage: \"\"\n</code></pre></p> </li> <li> Drop in replacement for OpenSSH sshd <pre><code>## The configuration can be used if you simply want to use Engity's Bifr\u00f6st as a drop-in-replacement\n## for the regular sshd.\n\nflows:\n  - name: local\n    authorization:\n      type: local\n      ## If PAM does not exist or is not supported, please comment the following line.\n      pamService: \"sshd\"\n\n    environment:\n      type: local\n      name: \"{{.authorization.user.name}}\"\n      ## If you only want to allow user with group \"ssh\" to log in, uncomment the following lines:\n      #loginAllowed: |\n      #  {{ or\n      #    (.authorization.user.group.name | eq \"ssh\" )\n      #    (.authorization.user.groups     | firstMatching `{{.name | eq \"ssh\" }}` )\n      #  }}\n</code></pre> </li> <li> Docker environment with OpenID Connect authorization <p>This example is using the Docker environment with OpenID Connection authorization. <pre><code>flows:\n  - name: docker\n    authorization:\n      type: oidcDeviceAuth\n      issuer: https://login.microsoftonline.com/my-great-tenant-uuid/v2.0\n      clientId: my-great-client-uuid\n      clientSecret: very-secret-secret\n      scopes:\n        - openid\n        - email\n        - profile\n    environment:\n      type: docker\n      image: alpine\n</code></pre></p> </li> </ol>"},{"location":"reference/data-type/","title":"Data type","text":""},{"location":"reference/data-type/#arch","title":"Arch (Architecture)","text":"<p>Represents an architecture. Here are all values supported where also a distribution of Bifr\u00f6st is available for. See distributions for available values.</p>"},{"location":"reference/data-type/#data-types","title":"Data types","text":"<p>A collection of simple data-types used within Bifr\u00f6st. More complex ones are defined on their dedicated pages.</p>"},{"location":"reference/data-type/#authorized-keys","title":"Authorized Keys","text":"<p>These are usually files in the home directory of each user, located at <code>~/.ssh/authorized_keys</code>. These files are in the format: <pre><code>&lt;key-type&gt; &lt;encoded-public-key&gt;[ &lt;comment&gt;]\n...\n</code></pre></p> <p>They contain SSH Public Keys.</p>"},{"location":"reference/data-type/#examples","title":"Examples","text":"<pre><code>ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC80lm5FQbbyRUut6RwZJRbxTLO3W4f08ITDi9fA3+jx me@foo.tld\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIGYzqJpPf3shQVGo98xMdl5S4LJmWme3i+sPcYseRrKziAWWGc8xzLUGnRwVe5X5v7J+IaHZ0dpnelylbnDwEvQTX+8gZybcL8RpS6u5dKqmKTv12SqcucpGStQ3O0Ec3MnRKEeMoJXIdqIVxuXxC8863H42KzkBvDjZn4qasF8IOVpGSC4+i93bNKScN6epQYzKcPCmZSSAnZJPgih0y1Z6+yNOJd+6PAFXmhBOh7yU0Ypne9szj/6o3YrPuNUj762CZyjg7ivQI/DvxwnUA2X8dnb2pyD4CGrr6YduWMl2xqUEDerNVaPc+I63QR8gIUYYmAs5uQwrDI4U0aWpC7erLMsNRa8C+YUdX+rV2+lJWSH8/k2NGrT1FoG5PWHmZTIe4juKIlAArzDAE6shauM3j4b4YLhly6mySXxT9m+EPtcrZjdEg76/0FylFUH70dx0Wf7lt50cLQIoXCJVovp/w95J6FVMYACl1y/sbDzmirg2PQkqkrr3MZnNY88jI/OuyZYAHNIjMkbriaFIkFBK4epGhsIIpsArPS8ZGZTQNBrrYWF+pf8JvJ1NaoLP+JKUP/A7l1KsqCKK3sWIRY7u8n8McK0VQMig4duHHtZ+aUGhZd/+m19UG1gg7QPUffZQM0RIPWWcsklrmlvzBqVcxgHXkZOoFqzc9WyewWQ== me-legacy@foo.tld\n</code></pre>"},{"location":"reference/data-type/#docker-pull-credentials","title":"Docker Pull Credentials","text":"<p>To pull from an OCI/Docker image registry there can be credentials required. In these cases usually they have to be provided in this format.</p> <p>Bifr\u00f6st accept them in the following formats:</p> <ol> <li>Base64 URL encoded JSON of format <code>{\"username\":\"&lt;username&gt;\",\"password\":\"&lt;password&gt;\"}</code> or <code>{\"auth\":\"&lt;base64 encoded auth token&gt;\"}</code></li> <li>JSON of format <code>{\"username\":\"&lt;username&gt;\",\"password\":\"&lt;password&gt;\"}</code> or <code>{\"auth\":\"&lt;base64 encoded auth token&gt;\"}</code> ... which will be:<ol> <li>base64 URL encoded by Bifr\u00f6st. -&gt; result will be as 1.</li> </ol> </li> <li>A bare auth token ... which will be:<ol> <li>base64 URL encoded,</li> <li>put into <code>{\"auth\":\"&lt;encoded bare auth token&gt;\"}</code> JSON and</li> <li>finally base64 URL encoded by Bifr\u00f6st. -&gt; result will be as 1.</li> </ol> </li> </ol>"},{"location":"reference/data-type/#dsa-restriction","title":"DSA Restriction","text":"<p>Can be one of:</p> <ul> <li><code>none</code></li> <li><code>all</code></li> <li><code>at-least-1024-bits</code></li> <li><code>at-least-2048-bits</code></li> <li><code>at-least-3072-bits</code></li> </ul>"},{"location":"reference/data-type/#duration","title":"Duration","text":"<p>A duration of time of Go flavor. Examples: <code>300ms</code>, <code>6s</code>, <code>5m</code>, <code>12h</code> or combined <code>12h5m6s300ms</code>.</p>"},{"location":"reference/data-type/#ed25519-restriction","title":"ED25519 Restriction","text":"<p>Can be one of:</p> <ul> <li><code>none</code></li> <li><code>all</code></li> <li><code>at-least-256-bits</code></li> </ul>"},{"location":"reference/data-type/#ecdsa-restriction","title":"ECDSA Restriction","text":"<p>Can be one of:</p> <ul> <li><code>none</code></li> <li><code>all</code></li> <li><code>at-least-256-bits</code></li> <li><code>at-least-384-bits</code></li> <li><code>at-least-521-bits</code></li> </ul>"},{"location":"reference/data-type/#flow-name","title":"Flow Name","text":"<p>Identifies flows. It has to fulfill the regular expression <code>[a-z][a-z0-9]+</code>.</p>"},{"location":"reference/data-type/#file-mode","title":"File Mode","text":"<p>The permissions to access a file in octal notation. See Oracles documentation for more details.</p>"},{"location":"reference/data-type/#file-path","title":"File Path","text":"<p>A location of a file on the local file system. Like <code>/foo/bar</code></p>"},{"location":"reference/data-type/#host","title":"Host","text":"<p>Represents a host(-name), which can be either an IPv4, IPv6 or DNS name.</p>"},{"location":"reference/data-type/#kubeconfig","title":"Kubeconfig","text":"<p>Configuration file in YAML format that defines how to access a Kubernetes cluster. See official Kubernetes documentation for more details.</p>"},{"location":"reference/data-type/#log-color-mode","title":"Log Color Mode","text":"<p>Can be one of:</p> <ul> <li><code>auto</code></li> <li><code>always</code></li> <li><code>never</code></li> </ul>"},{"location":"reference/data-type/#log-format","title":"Log Format","text":"<p>Can be one of:</p> <ul> <li><code>text</code></li> <li><code>json</code></li> </ul>"},{"location":"reference/data-type/#log-level","title":"Log Level","text":"<p>Can be one of:</p> <ul> <li><code>TRACE</code></li> <li><code>DEBUG</code></li> <li><code>INFO</code></li> <li><code>WARN</code></li> <li><code>ERROR</code></li> <li><code>FATAL</code></li> </ul>"},{"location":"reference/data-type/#net-address","title":"Net Address","text":"<p>Socket address in format <code>[&lt;Host&gt;]:&lt;port&gt;</code>.</p>"},{"location":"reference/data-type/#os","title":"Os (Operating System)","text":"<p>Represents an operating system. Here are all values supported where also a distribution of Bifr\u00f6st is available for. See distributions for available values.</p>"},{"location":"reference/data-type/#password","title":"Password","text":"<p>Represents an encoded or plain password that can be evaluated if it does match a requested one.</p>"},{"location":"reference/data-type/#password-type","title":"Password Type","text":"<p>Can be one of:</p> <ul> <li><code>plain</code></li> <li><code>bcrypt</code></li> </ul>"},{"location":"reference/data-type/#pull-policy","title":"Pull Policy","text":"<p>Can be one of:</p> <ul> <li><code>ifAbsend</code>: The resource (e.g. an image) is pulled only if it is not already present locally.</li> <li><code>always</code>: Everytime a context is crated (for example a new environment) the latest version of the resource will be pulled from the remote registry (for example an image). It does not matter if the resource does already exist or not. No matter if the resource (like images) is based on digest or of the digest is the same, the digest is the same, the corresponding sub-resources will not be pulled.</li> <li><code>never</code>: The resource (like an image) has to be present. Otherwise, the process will fail.</li> </ul>"},{"location":"reference/data-type/#regex","title":"Regex","text":"<p>Regular expression of Go flavor. You can play around with it at regex.com.</p>"},{"location":"reference/data-type/#rsa-restriction","title":"RSA Restriction","text":"<p>Can be one of:</p> <ul> <li><code>none</code></li> <li><code>all</code></li> <li><code>at-least-1024-bits</code></li> <li><code>at-least-2048-bits</code></li> <li><code>at-least-3072-bits</code></li> <li><code>at-least-4096-bits</code></li> </ul>"},{"location":"reference/data-type/#ssh-public-key","title":"SSH Public Key","text":"<p>The public variant of an SSH keypair of a user.</p> <p>Please refer to the good documentation at GitHub how to create SSH (public) keys.</p>"},{"location":"reference/data-type/#url","title":"URL","text":"<p>Represents a classical URL to reference resources (for example) in the internet, like https://bifroest.engity.org.</p>"},{"location":"reference/flow/","title":"Flows","text":"<p>A flow represents a flow of a user's session from the authorization to the active environment. Unlike the majority of the SSH servers, Bifr\u00f6st cannot only interpret one flow, it can interpret one or more. With this approach Bifr\u00f6st can do something similar like HTTP servers are implementing Virtual hosting - but in this case it is based on the combination of the requesting usernames (see requirement) and which authorization the user can fulfill.</p> <p>For each configured flow, Bifr\u00f6st will evaluate the following checks. If one of them does not succeed, Bifr\u00f6st will end the evaluating of the current flow and will try the next one as long as more candidates are available:</p> <ol> <li>Is there already a matching session existing; if yes: Execute immediately into the environment of this session and skip the following evaluations.</li> <li>Is the requirement fulfilled?</li> <li>Is the user successfully authorized?</li> <li>Is the configured environment able to handle the current connection and authorization?</li> <li>Is it possible to create a session for the combination of connection, authorization and environment?</li> </ol>"},{"location":"reference/flow/#configuration","title":"Configuration","text":""},{"location":"reference/flow/#property-name","title":"<code>name</code>","text":"<p>Flow Name </p> <p>Defines the unique name of the flow. It will be used inside logs, as references for the stored sessions, ...</p> <p>Warning</p> <p>Changing this value afterward means to break all existing sessions.</p>"},{"location":"reference/flow/#property-requirement","title":"<code>requirement</code>","text":"<p>Requirement</p> See Requirement, below."},{"location":"reference/flow/#property-authorization","title":"<code>authorization</code>","text":"<p>Authorization </p> Will be evaluated to ensure the requesting user is allowed to access the environment of this flow."},{"location":"reference/flow/#property-environment","title":"<code>environment</code>","text":"<p>Environment </p> Once all requirements are fulfilled and the user is successfully authorized, he will execute into this environment."},{"location":"reference/flow/#example","title":"Example","text":"<pre><code>flows:\n  - name: sso\n    requirement:\n      includedRequestingName: ^sso$\n    authorization:\n      type: oidc\n      # ...\n    environment:\n      type: local\n      # ...\n\n  - name: local\n    authorization:\n      type: local\n      # ...\n    environment:\n      type: local\n      # ...\n</code></pre>"},{"location":"reference/flow/#requirement","title":"Requirement","text":"<p>The requirement has to be fulfilled, even before the authorization is evaluated.</p>"},{"location":"reference/flow/#requirement-configuration","title":"Configuration","text":""},{"location":"reference/flow/#requirement-property-includedRequestingName","title":"<code>includedRequestingName</code>","text":"<p>Regex = <code>\"\\\"\\\"\"</code></p> <p>If this property is set, the requesting name (<code>ssh &lt;requesting name&gt;@my-host.tld</code>) has to fulfill this regular expression. If empty everything will be included.</p> <p>Warning</p> <p>Keep <code>^</code> and <code>$</code> to ensure a full match, otherwise it matches only a part of it.</p>"},{"location":"reference/flow/#requirement-property-excludedRequestingName","title":"<code>excludedRequestingName</code>","text":"<p>Regex = <code>\"\\\"\\\"\"</code></p> <p>If this property is set, the requesting name (<code>ssh &lt;requesting name&gt;@my-host.tld</code>) has to NOT fulfill this regular expression. If empty everything will be included.</p> <p>Warning</p> <p>Keep <code>^</code> and <code>$</code> to ensure a full match, otherwise it matches only a part of it.</p>"},{"location":"reference/flow/#requirement-example","title":"Example","text":"<pre><code>requirement:\n  includedRequestingName: ^foo$\n  excludedRequestingName: ^bar$\n</code></pre>"},{"location":"reference/flow/#next-topics","title":"Next topics","text":"<ul> <li>Configuration</li> <li>Environments</li> <li>Authorizations</li> </ul>"},{"location":"reference/housekeeping/","title":"Housekeeping","text":"<p>Bifr\u00f6st must carry out some clean-up tasks periodically to ensure no sessions and connections are dangling.</p>"},{"location":"reference/housekeeping/#properties","title":"Properties","text":""},{"location":"reference/housekeeping/#property-every","title":"<code>every</code>","text":"<p>Duration = <code>\"10m\"</code></p> <p>How often the housekeeping should run.</p>"},{"location":"reference/housekeeping/#property-initialDelay","title":"<code>initialDelay</code>","text":"<p>Duration = <code>0</code></p> <p>How long should be waited upon start of the application before the first run. If <code>0</code> it is also blocking, even before the first connection will be accepted.</p>"},{"location":"reference/housekeeping/#property-autoRepair","title":"<code>autoRepair</code>","text":"<p>bool = <code>true</code></p> <p>If <code>true</code> the service will try to repair potentially corrupt or broken states by itself, as long as this is safely possible.</p>"},{"location":"reference/housekeeping/#property-keepExpiredFor","title":"<code>keepExpiredFor</code>","text":"<p>Duration = <code>\"336h\"</code></p> <p>For how long a disposed session will be kept. The session will no longer be usable, but it might be helpful for audit reasons.</p> <p>Note</p> <p><code>336h</code> = 14 days</p>"},{"location":"reference/authorization/","title":"Authorizations","text":"<p>Everything in Bifr\u00f6st starts here. Firstly, a user must be authorized. Bifr\u00f6st supports different types of authorizations you can choose from to adjust to your needs.</p>"},{"location":"reference/authorization/#types","title":"Types","text":"<ol> <li><code>local</code>: Local</li> <li><code>oidc</code>: OpenID Connect (OIDC)</li> <li><code>simple</code>: Simple</li> <li><code>htpasswd</code>: Htpasswd</li> <li><code>none</code>: None</li> </ol>"},{"location":"reference/authorization/#examples","title":"Examples","text":"<ol> <li>Using local authorization:    <pre><code>type: local\n</code></pre></li> <li>Using OpenID Connect DeviceAuth authorization:    <pre><code>type: oidcDeviceAuth\nissuer: https://login.microsoftonline.com/my-great-tenant-uuid/v2.0\nclientId: my-great-client-uuid\nclientSecret: very-secret-secret\nscopes:\n    - openid\n    - email\n    - profile\n</code></pre></li> <li>Using Simple DeviceAuth:    <pre><code>type: simple\nentries:\n  - name: foo\n    password: plain:bar\n</code></pre></li> </ol>"},{"location":"reference/authorization/htpasswd/","title":"Htpasswd authorization","text":"<p>Authorizes a user request via credentials stored in htpasswd format.</p>"},{"location":"reference/authorization/htpasswd/#properties","title":"Properties","text":""},{"location":"reference/authorization/htpasswd/#property-type","title":"<code>type</code>","text":"<p>Authorization Type  = <code>\"htpasswd\"</code></p> <p>Has to be set to <code>htpasswd</code> to enable the htpasswd authorization.</p>"},{"location":"reference/authorization/htpasswd/#property-file","title":"<code>file</code>","text":"<p>File Path = <code>\"&lt;os specific&gt;\"</code></p> <p>A file where each line contains an entry in htpasswd format.</p> <p>The default value varies depending on the platform Bifr\u00f6st runs on:</p> <ul> <li>Linux: <code>/etc/engity/bifroest/htpasswd</code></li> <li>Window: <code>C:\\ProgramData\\Engity\\Bifroest\\htpasswd</code></li> </ul>"},{"location":"reference/authorization/htpasswd/#property-file-examples","title":"Examples","text":"/etc/engity/bifroest/htpasswd<pre><code>foo:$apr1$zapgfl56$eXIHR/wBYFypkUEXWdCZN/\nbar:$apr1$wqkvo7c2$dqi5g.hK67jLMY4SJzrjq.\n</code></pre>"},{"location":"reference/authorization/htpasswd/#property-entries","title":"<code>entries</code>","text":"<p>string</p> <p>This is similar to <code>file</code>, but does contain the htpasswd entries directly inside the configuration.</p>"},{"location":"reference/authorization/htpasswd/#property-entries-examples","title":"Examples","text":"<pre><code>authorization:\n  type: htpasswd\n  entries: |\n    foo:$apr1$zapgfl56$eXIHR/wBYFypkUEXWdCZN/\n    bar:$apr1$wqkvo7c2$dqi5g.hK67jLMY4SJzrjq.\n</code></pre>"},{"location":"reference/authorization/htpasswd/#format","title":"Format","text":"<p>htpasswd is a format created for Apache HTTP Server to enable an easy way to configure Basic Authentication for web servers. Nowadays, it is used in more web server projects than just the Apache HTTP Server and also in other project types like Bifr\u00f6st. The reason: There is a huge toolset available to create those files.</p>"},{"location":"reference/authorization/htpasswd/#tools","title":"Tools","text":"<ol> <li>Apache HTTP Server command line tool which can be easily installed on many systems such as:<ul> <li>Ubuntu:   <pre><code>sudo apt-get install apache2-utils -y\n</code></pre></li> <li>Fedora/RedHat:   <pre><code>sudo apt install apache2-utils -y\n</code></pre></li> </ul> </li> <li>Helm for Kubernetes function</li> <li>Ansible module</li> <li>Terraform/OpenTofu plugin</li> <li>...</li> </ol>"},{"location":"reference/authorization/htpasswd/#context","title":"Context","text":"<p>This authorization will produce a context of type Authorization Htpasswd.</p>"},{"location":"reference/authorization/htpasswd/#examples","title":"Examples","text":"<ol> <li>Using dedicated file from default location:    <pre><code>type: htpasswd\n</code></pre></li> <li>Using dedicated file from custom location:    <pre><code>type: htpasswd\nfile: /etc/foo/bar\n</code></pre></li> <li>Using embedded entries:    <pre><code>type: htpasswd\nentries: |\n  foo:$apr1$zapgfl56$eXIHR/wBYFypkUEXWdCZN/\n  bar:$apr1$wqkvo7c2$dqi5g.hK67jLMY4SJzrjq.\n</code></pre></li> </ol>"},{"location":"reference/authorization/htpasswd/#compatibility","title":"Compatibility","text":"<code>linux</code> <code>windows</code> / /"},{"location":"reference/authorization/local/","title":"Local authorization","text":"<p>Authorizes a user request via the local user database of the host on which Bifr\u00f6st is running.</p> <p>Note</p> <p>This authorization requires Bifr\u00f6st to run with root permissions.</p>"},{"location":"reference/authorization/local/#properties","title":"Properties","text":""},{"location":"reference/authorization/local/#property-type","title":"<code>type</code>","text":"<p>Authorization Type  = <code>\"local\"</code></p> <p>Has to be set to <code>local</code> to enable the local authorization.</p>"},{"location":"reference/authorization/local/#property-authorizedKeys","title":"<code>authorizedKeys</code>","text":"<p>[]File Path&lt;Authorized Keys&gt;  Core = </p> <pre><code>[\"{{.user.homeDir}}/.ssh/authorized_keys\"]\n</code></pre> <p>Contains files with the format of classic authorized keys, in which Bifr\u00f6st will look for SSH Public Keys.</p>"},{"location":"reference/authorization/local/#property-password","title":"<code>password</code>","text":"<p>Password</p> <p>See below.</p>"},{"location":"reference/authorization/local/#property-pamService","title":"<code>pamService</code>","text":"<p>string = <code>\"&lt;os and edition specific&gt;\"</code></p> <p>If set to a non-empty value, this PAM service will be directly used during the authorization process instead of <code>/etc/passwd</code> and <code>/etc/shadow</code>.</p>"},{"location":"reference/authorization/local/#default-settings","title":"Default settings","text":"<code>linux</code>/<code>extended</code> anything else <code>sshd</code> empty"},{"location":"reference/authorization/local/#password","title":"Password","text":"<p>The password can either be validated via <code>/etc/passwd</code> and <code>/etc/shadow</code> (default) or via PAM (if <code>pamService</code> is set to a valid value).</p>"},{"location":"reference/authorization/local/#password-properties","title":"Properties","text":""},{"location":"reference/authorization/local/#password-property-allowed","title":"<code>allowed</code>","text":"<p>bool  Context Password Authorization Request = <code>true</code></p> <p>If <code>true</code>, the user is allowed to use passwords via classic password authentication</p>"},{"location":"reference/authorization/local/#password-property-interactiveAllowed","title":"<code>interactiveAllowed</code>","text":"<p>bool  Context Interactive Authorization Request = <code>true</code></p> <p>If <code>true</code>, the user is allowed to use passwords via interactive authentication.</p>"},{"location":"reference/authorization/local/#password-property-emptyAllowed","title":"<code>emptyAllowed</code>","text":"<p>bool  Context * Authorization Request = <code>false</code></p> <p>If <code>true</code>, the user is allowed to use empty passwords.</p> <p>Danger</p> <p>This is explicitly not recommend.</p>"},{"location":"reference/authorization/local/#context","title":"Context","text":"<p>This authorization will produce a context of type Authorization Local.</p>"},{"location":"reference/authorization/local/#examples","title":"Examples","text":""},{"location":"reference/authorization/local/#compatibility","title":"Compatibility","text":"Feature <code>linux</code> <code>windows</code> PAM / / anything else / /"},{"location":"reference/authorization/none/","title":"None authorization","text":"<p>Always authorizes a user regardless of the password used, even if no password or SSH key is provided.</p> <p>Danger</p> <p>This authorization enables a high security risk.</p> <p>There are only very rare cases where this makes sense. Only in cases like creating a demo server does it make sense to use it. See our demonstration/training use case as a ligable example</p>"},{"location":"reference/authorization/none/#properties","title":"Properties","text":"<p>None.</p>"},{"location":"reference/authorization/none/#context","title":"Context","text":"<p>This authorization will produce a context of type Authorization Simple.</p>"},{"location":"reference/authorization/none/#examples","title":"Examples","text":"<pre><code>type: none\n</code></pre>"},{"location":"reference/authorization/none/#compatibility","title":"Compatibility","text":"<code>linux</code> <code>windows</code> / /"},{"location":"reference/authorization/oidc/","title":"OpenID Connect (OIDC) authorization","text":"<p>Authorizes a user request via OpenID Connect (OIDC).</p> <p>There is no need that the actual user exists in any way on the host machine of Bifr\u00f6st. Even if the local environment is used together with <code>createIfAbsent</code> and <code>updateIfDifferent</code> set to <code>true</code>, it will create/update the users. There is no need for tools like Puppet or Ansible.</p> <p>This provides an easy way for SSO in all types of organizations, small or big. See use cases for more details.</p> <p>Currently, the following flow of OpenID Connect is supported:</p> <ul> <li>Device Auth</li> </ul>"},{"location":"reference/authorization/oidc/#device-auth","title":"Device Auth","text":""},{"location":"reference/authorization/oidc/#device-auth-properties","title":"Properties","text":""},{"location":"reference/authorization/oidc/#device-auth-property-type","title":"<code>type</code>","text":"<p>Authorization Type  = <code>\"oidc\"</code></p> <p>Has to be set to <code>oidcDeviceAuth</code> to enable the OIDC DeviceAuth authorization.</p>"},{"location":"reference/authorization/oidc/#device-auth-property-issuer","title":"<code>issuer</code>","text":"<p>URL Core </p> <p>The issuer is the URL identifier for the service which is issued by your identity provider.</p>"},{"location":"reference/authorization/oidc/#device-auth-property-issuer-examples","title":"Examples","text":"<ul> <li><code>https://login.microsoftonline.com/my-great-tenant-uuid/v2.0</code></li> <li><code>https://accounts.google.com</code></li> <li><code>https://login.salesforce.com</code></li> </ul>"},{"location":"reference/authorization/oidc/#device-auth-property-clientId","title":"<code>clientId</code>","text":"<p>string  Core </p> <p>Client ID issued by your identity provider.</p>"},{"location":"reference/authorization/oidc/#device-auth-property-clientSecret","title":"<code>clientSecret</code>","text":"<p>string  Core </p> <p>Secret for the corresponding Client ID.</p>"},{"location":"reference/authorization/oidc/#device-auth-property-scopes","title":"<code>scopes</code>","text":"<p>[]string  Core = <code>[\"openid\", \"profile\", \"email\"]</code></p> <p>Scopes to request the token from the identity provider for.</p>"},{"location":"reference/authorization/oidc/#device-auth-property-scopes-examples","title":"Examples","text":"<pre><code>scopes:\n    - openid\n    - email\n    - profile\n</code></pre>"},{"location":"reference/authorization/oidc/#device-auth-property-retrieveIdToken","title":"<code>retrieveIdToken</code>","text":"<p>bool = <code>true</code></p> <p>Will retrieve the ID Token and makes it available in the corresponding context via <code>idToken</code>.</p>"},{"location":"reference/authorization/oidc/#device-auth-property-retrieveUserInfo","title":"<code>retrieveUserInfo</code>","text":"<p>bool = <code>false</code></p> <p>Will retrieve the UserInfo and makes it available in the corresponding context via <code>userInfo</code>.</p>"},{"location":"reference/authorization/oidc/#device-auth-context","title":"Context","text":"<p>This authorization will produce a context of type Authorization OIDC.</p>"},{"location":"reference/authorization/oidc/#device-auth-examples","title":"Examples","text":"<pre><code>type: oidcDeviceAuth\nissuer: https://login.microsoftonline.com/my-great-tenant-uuid/v2.0\nclientId: my-great-client-uuid\nclientSecret: very-secret-secret\nscopes:\n  - openid\n  - email\n  - profile\n</code></pre>"},{"location":"reference/authorization/oidc/#compatibility","title":"Compatibility","text":"<code>linux</code> <code>windows</code> / /"},{"location":"reference/authorization/simple/","title":"Simple authorization","text":"<p>Authorizes a user request via stored credentials.</p>"},{"location":"reference/authorization/simple/#properties","title":"Properties","text":""},{"location":"reference/authorization/simple/#property-type","title":"<code>type</code>","text":"<p>Authorization Type  = <code>\"simple\"</code></p> <p>Has to be set to <code>simple</code> to enable simple authorization.</p>"},{"location":"reference/authorization/simple/#property-entries","title":"<code>entries</code>","text":"<p>[]Entry</p> <p>Each entry will be inspected to check if a remote user should be authorized.</p>"},{"location":"reference/authorization/simple/#entry","title":"Entry","text":"<p>Always one property of the following properties has to match in combination with <code>name</code>:</p> <ul> <li><code>authorizedKeys</code></li> <li><code>authorizedKeysFile</code></li> <li><code>password</code></li> <li><code>passwordFile</code></li> </ul>"},{"location":"reference/authorization/simple/#entry-properties","title":"Properties","text":""},{"location":"reference/authorization/simple/#entry-property-name","title":"<code>name</code>","text":"<p>string </p> <p>Name the remote user has to have.</p> <p>Like: <code>ssh &lt;name&gt;@my-great-domain.tld</code> to match this entry.</p>"},{"location":"reference/authorization/simple/#entry-property-authorizedKeys","title":"<code>authorizedKeys</code>","text":"<p>Authorized Keys</p> <p>Contains SSH Public Keys in the format of classic authorized keys.</p>"},{"location":"reference/authorization/simple/#entry-property-authorizedKeysFile","title":"<code>authorizedKeysFile</code>","text":"<p>File Path&lt;Authorized Keys&gt;</p> <p>Similar to <code>authorizedKeys</code>, but in a dedicated file.</p>"},{"location":"reference/authorization/simple/#entry-property-password","title":"<code>password</code>","text":"<p>Password</p> <p>Password (if user uses interactive or password authentication method) to be evaluated against.</p>"},{"location":"reference/authorization/simple/#entry-property-passwordFile","title":"<code>passwordFile</code>","text":"<p>File Path&lt;Password&gt;</p> <p>Same as <code>password</code>, but is receiving the value from this file.</p> <p>If both properties are defined and have values, <code>password</code> will be used.</p>"},{"location":"reference/authorization/simple/#entry-property-createPasswordFileIfAbsentOfType","title":"<code>createPasswordFileIfAbsentOfType</code>","text":"<p>Password Type</p> <p>If this property is provided and <code>passwordFile</code> is defined, but does not exist, the file will be generated with a random password of this type.</p> <p>The result will be printed into the startup logs of Bifr\u00f6st.</p> <p>This feature usually only makes sense for cases where you want to create dummy configurations of Bifr\u00f6st to demonstrate some functionality, like we're utilizing it in our demonstration configurations: contrib/configurations/simple-inside-docker.yaml.</p>"},{"location":"reference/authorization/simple/#context","title":"Context","text":"<p>This authorization will produce a context of type Authorization Simple.</p>"},{"location":"reference/authorization/simple/#examples","title":"Examples","text":"<ol> <li>Using plain password:    <pre><code>type: simple\nentries:\n  - name: foo\n    password: plain:bar\n</code></pre></li> <li>Using authorized keys:    <pre><code>type: simple\nentries:\n  - name: foo\n    authorizedKeys: |\n      ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC80lm5FQbbyRUut6RwZJRbxTLO3W4f08ITDi9fA3+jx foo@foo.tld\n</code></pre></li> </ol>"},{"location":"reference/authorization/simple/#compatibility","title":"Compatibility","text":"<code>linux</code> <code>windows</code> / /"},{"location":"reference/connection/","title":"Connections","text":"<p>Connections represent the way users connect to Bifr\u00f6st. Currently, Bifr\u00f6st supports exclusively the SSH protocol.</p>"},{"location":"reference/connection/#variants","title":"Variants","text":"<ol> <li>SSH</li> </ol>"},{"location":"reference/connection/ssh/","title":"SSH connection","text":"<p>Defines the behavior of the SSH protocol for a user who is connecting to Bifr\u00f6st.</p>"},{"location":"reference/connection/ssh/#configuration","title":"Configuration","text":""},{"location":"reference/connection/ssh/#property-addresses","title":"<code>addresses</code>","text":"<p>[]Net Address = <code>[\":22\"]</code></p> <p>To which address the service will bind and listen to. ``</p>"},{"location":"reference/connection/ssh/#property-keys","title":"<code>keys</code>","text":"<p>Keys</p> <p>See below.</p>"},{"location":"reference/connection/ssh/#property-idleTimeout","title":"<code>idleTimeout</code>","text":"<p>Duration = <code>\"10m\"</code></p> <p>For how long a connection can be idle before it will forcibly be closed. The client can send keep alive packages to extend the idle time. <code>0</code> means that the connection will never time out.</p>"},{"location":"reference/connection/ssh/#property-maxTimeout","title":"<code>maxTimeout</code>","text":"<p>Duration = <code>0</code></p> <p>The maximum duration a connection can be open before it will be forcibly be closed, regardless whether there are actions or not. <code>0</code> means that the connection will never time out.</p>"},{"location":"reference/connection/ssh/#property-maxAuthTries","title":"<code>maxAuthTries</code>","text":"<p>uint8 = <code>6</code></p> <p>How many different authentication methods a client can use before the connection will be rejected.</p>"},{"location":"reference/connection/ssh/#property-maxConnections","title":"<code>maxConnections</code>","text":"<p>uint8 = <code>255</code></p> <p>The maximum amount of parallel connections on this service. Every additional connection beyond will be rejected.</p>"},{"location":"reference/connection/ssh/#property-proxyProtocol","title":"<code>proxyProtocol</code>","text":"<p>bool = <code>false</code></p> <p>If enabled Bifr\u00f6st will support incoming connection the PROXY protocol versions 1 and 2 format.</p>"},{"location":"reference/connection/ssh/#property-banner","title":"<code>banner</code>","text":"<p>string  Connection = </p> <pre><code>\"{{ \\`/etc/ssh/sshd-banner\\` | file \\`optional\\` | default \\`Transcend with Engity's Bifr\u00f6st\\n\\n\\` }}\"\n</code></pre> <p>Banner which will be shown when the client connects to the server even before the first validation of authorizations or similar happens.</p>"},{"location":"reference/connection/ssh/#examples","title":"Examples","text":"<pre><code>addresses: [ \":22\" ]\nkeys:\n  hostKeys: [ /etc/engity/bifroest/key ]\n  # ...\nidleTimeout: 10m\nmaxTimeout: 0\nmaxAuthTries: 6\nmaxConnections: 255\nbanner: \"Yeah!\"\n</code></pre>"},{"location":"reference/connection/ssh/#property-preparationMessages","title":"<code>preparationMessages</code>","text":"<p>Preparation Messages</p> <p>See below.</p>"},{"location":"reference/connection/ssh/#keys","title":"Keys","text":""},{"location":"reference/connection/ssh/#keys-configuration","title":"Configuration","text":""},{"location":"reference/connection/ssh/#keys-property-hostKeys","title":"<code>hostKeys</code>","text":"<p>[]File Path = <code>[\"&lt;defaultLocation&gt;\"]</code></p> <p>Where to store the host keys at. If they do not exist, they will be created as Ed25519 key.</p> <p>Default Locations:</p> <ul> <li>Linux: <code>/etc/engity/bifroest/key</code></li> <li>Windows: <code>C:\\ProgramData\\Engity\\Bifroest\\key</code></li> </ul>"},{"location":"reference/connection/ssh/#keys-property-rsaRestriction","title":"<code>rsaRestriction</code>","text":"<p>RSA Restriction = <code>\"at-least-4096-bits\"</code></p> <p>Restrict which RSA keys are allowed to be used.</p>"},{"location":"reference/connection/ssh/#keys-property-dsaRestriction","title":"<code>dsaRestriction</code>","text":"<p>DSA Restriction = <code>\"none\"</code></p> <p>Restrict which DSA keys are allowed to be used.</p>"},{"location":"reference/connection/ssh/#keys-property-ecdsaRestriction","title":"<code>ecdsaRestriction</code>","text":"<p>ECDSA Restriction = <code>\"at-least-384-bits\"</code></p> <p>Restrict which ECDSA keys are allowed to be used.</p>"},{"location":"reference/connection/ssh/#keys-property-ed25519Restriction","title":"<code>ed25519Restriction</code>","text":"<p>ED25519 Restriction = <code>\"all\"</code></p> <p>Restrict which ED25519 keys are allowed to be used.</p>"},{"location":"reference/connection/ssh/#keys-property-rememberMeNotification","title":"<code>rememberMeNotification</code>","text":"<p>string  Authorization = </p> <pre><code>\"If you return until {{.session.validUntil | format \\`dateTimeT\\`}} with the same public key ({{.key | fingerprint}}), you can seamlessly log in again.\\n\\n\"\n</code></pre> <p>Banner which will be shown if the connection was based on an authentication method (like OIDC) which does not have its own public key authentication. At this point, the authentication was successful AND the client submitted at least one public key (as authentication try). This key will be used and this message will be shown to the client to inform that this key will be used for the session from now on. As a result, the original authentication will be skipped (like OIDC) as long as it is not expired and the client presents the same public key.</p>"},{"location":"reference/connection/ssh/#keys-examples","title":"Examples","text":"<pre><code>hostKeys: [ /etc/engity/bifroest/key ]\nrsaRestriction: at-least-4096-bits\ndsaRestriction: none\necdsaRestriction: at-least-384-bits\ned25519Restriction: all\nrememberMeNotification: \"If you return until {{.session.validUntil | format `dateTimeT`}} with the same public key {{.key | fingerprint}}), you can seamlessly login again.\\n\\n\"\n</code></pre>"},{"location":"reference/connection/ssh/#preparationMessages","title":"Preparation Messages","text":"<p>In some cases the connection will not be available instantly. For example if the docker environment is used and an image needs to be downloaded first, this could take some seconds. In these cases different parts of Bifr\u00f6st might trigger these messages being displayed. By default, all of them are displayed as described below.</p> <p>As this is an array of preparation messages, the first which matches, wins.</p>"},{"location":"reference/connection/ssh/#preparationMessages-configuration","title":"Configuration","text":""},{"location":"reference/connection/ssh/#preparationMessages-property-id","title":"<code>id</code>","text":"<p>Regex = <code>\".*\"</code></p> <p>Each preparation proces has a unique ID (like <code>pull-image</code> of the docker environment).</p> <p>This property defines a regular expression this ID has to match together with <code>flow</code>.</p>"},{"location":"reference/connection/ssh/#preparationMessages-property-flow","title":"<code>flow</code>","text":"<p>Regex = <code>\".*\"</code></p> <p>Each preparation process will be produces by a flow.</p> <p>This property defines a regular expression the name of this flow has to match together with <code>id</code>.</p>"},{"location":"reference/connection/ssh/#preparationMessages-property-start","title":"<code>start</code>","text":"<p>string  Preparation Process = <code>\"{{.title}}...\"</code></p> <p>This message is shown when a preparation process starts.</p>"},{"location":"reference/connection/ssh/#preparationMessages-property-update","title":"<code>update</code>","text":"<p>string  Preparation Process = </p> <pre><code>\"\\r{{.title}}... {{.percentage | printf \\`%.0f%%\\`}}\"\n</code></pre> <p>This message is shown on each status change of a preparation process.</p>"},{"location":"reference/connection/ssh/#preparationMessages-property-end","title":"<code>end</code>","text":"<p>string  Preparation Process = <code>\"\\r{{.title}}... DONE!\\n\"</code></p> <p>This message is shown if the preparation process finishes successful.</p>"},{"location":"reference/connection/ssh/#preparationMessages-property-error","title":"<code>error</code>","text":"<p>string  Preparation Process = </p> <pre><code>\"\\r{{.title}}... FAILED! Contact server operator for more information. Disconnecting now...\\n\"\n</code></pre> <p>This message is shown if the preparation process finishes with an error. The direct consequence will be that the connection will be closed by Bifr\u00f6st immediately.</p>"},{"location":"reference/connection/ssh/#preparationMessages-examples","title":"Examples","text":"Show special message for pull-image process (all flows), but default for the rest<pre><code>preparationMessages:\n  - id: ^pull-image$\n    # {{.image}} is NOT part of the common set of properties of\n    # a Preparation Message it is specific to this message.\n    # Please visit the details of each Preparation Message type\n    # for details.\n    start: \"Going to download image {{.image}}...\"\n    update: \"\\rGoing to download image {{.image}}... {{.percentage | printf `%.0f%%`}}\"\n    end: \"\\rImage {{.image}} downloaded.\\n\"\n    error: \"\\rFailed to download image {{.image}}.\\n\"\n  - {} # Entry with all default values as mentioned above\n</code></pre> Disable messages completely, for all preparation processes<pre><code>preparationMessages:\n  - start: \"\"\n    update: \"\"\n    end: \"\"\n    error: \"\"\n</code></pre>"},{"location":"reference/connection/ssh/#compatibility","title":"Compatibility","text":"<code>linux</code> <code>windows</code> / /"},{"location":"reference/context/","title":"Context objects","text":"<p>Context objects depends on where they are used in \ud83d\ude09 and mainly injected into a template evaluation.</p>"},{"location":"reference/context/#variants","title":"Variants","text":"<ol> <li> <p>Alternative Binary</p> </li> <li> <p>Authorization</p> </li> <li> <p>Authorization Request</p> </li> <li> <p>Connection</p> </li> <li> <p>Container</p> </li> <li> <p>Core</p> </li> <li> <p>Local Group</p> </li> <li> <p>Local User</p> </li> <li> <p>OIDC Token</p> </li> <li> <p>OIDC ID Token</p> </li> <li> <p>OIDC User Info</p> </li> <li> <p>Preparation Process</p> </li> <li> <p>Remote</p> </li> <li> <p>Simple Entry</p> </li> </ol>"},{"location":"reference/context/alternative-binary/","title":"Context Alternative Binary","text":"<p>In cases when Bifr\u00f6st needs to obtain an alternative variant of its binaries, this context provides the required information.</p>"},{"location":"reference/context/alternative-binary/#properties","title":"Properties","text":""},{"location":"reference/context/alternative-binary/#property-os","title":"<code>os</code>","text":"<p>string</p> <p>Holds the name of the operating system, such as <code>linux</code> or <code>windows</code>.</p>"},{"location":"reference/context/alternative-binary/#property-arch","title":"<code>arch</code>","text":"<p>string</p> <p>Holds the name of the architecture, such as <code>amd64</code> or <code>arm64</code>.</p>"},{"location":"reference/context/alternative-binary/#property-version","title":"<code>version</code>","text":"<p>string</p> <p>Holds the actual version, such as <code>v0.5.10</code>.</p>"},{"location":"reference/context/alternative-binary/#property-ext","title":"<code>ext</code>","text":"<p>string</p> <p>Holds the extension for the target binary, such as <code>&lt;empty&gt;</code> or <code>.exe</code>.</p>"},{"location":"reference/context/alternative-binary/#property-packageExt","title":"<code>packageExt</code>","text":"<p>string</p> <p>Holds the extension for the package, such as <code>.tgz</code> or <code>.zip</code>.</p>"},{"location":"reference/context/authorization-request/","title":"Context Authorization Request","text":"<p>Represents a request for authorization of a remote user/connection.</p> <p>There are more specialized variants of the authorization request available, based on their actual usage:</p> <ul> <li>Public Key</li> <li>Password</li> <li>Interactive</li> </ul>"},{"location":"reference/context/authorization-request/#properties","title":"Properties","text":""},{"location":"reference/context/authorization-request/#property-remote","title":"<code>remote</code>","text":"<p>Remote</p> <p>Identifies the user with its host and username.</p>"},{"location":"reference/context/authorization-request/#public-key","title":"Public Key","text":"<p>Is used at the attempt to use the authentication method <code>publickey</code> where the user's client presents one of the user's SSH Public Keys.</p>"},{"location":"reference/context/authorization-request/#properties_1","title":"Properties","text":"<p>All inherited of Context Authorization Request plus:</p>"},{"location":"reference/context/authorization-request/#publicKey-property-publicKey","title":"<code>publicKey</code>","text":"<p>SSH Public Key</p> <p>The provided SSH Public Key of the requesting remote user.</p>"},{"location":"reference/context/authorization-request/#password","title":"Password","text":"<p>Is used at the attempt to use the authentication method <code>password</code> where the user's client presents the password the user either handed over directly to the SSH client software via command line, stdin or when the client asks for it.</p>"},{"location":"reference/context/authorization-request/#properties_2","title":"Properties","text":"<p>All inherited of Context Authorization Request plus:</p>"},{"location":"reference/context/authorization-request/#password-property-password","title":"<code>password</code>","text":"<p>string</p> <p>The provided password.</p>"},{"location":"reference/context/authorization-request/#interactive","title":"Interactive","text":"<p>Is used at the attempt to use the authentication method <code>keyboard-interactive</code> where the user's client give the control to the server to interactively request more information from the user. Usually, this is another way to request either the password or multi-factor-information.</p>"},{"location":"reference/context/authorization-request/#properties_3","title":"Properties","text":"<p>All inherited of Context Authorization Request, but no other.</p>"},{"location":"reference/context/authorization/","title":"Context Authorization","text":"<p>Represents a fully authorized connection of a user.</p> <p>There are more specialized variants of the authorization available, based on which authorization type was used:</p> Variant Authorization Htpasswd Htpasswd Local Local OpenID Connect (OIDC) OpenID Connect (OIDC) Simple Simple None None"},{"location":"reference/context/authorization/#htpasswd","title":"Htpasswd","text":"<p>Is the result of a successful authorization via Htpasswd authorization.</p>"},{"location":"reference/context/authorization/#properties","title":"Properties","text":""},{"location":"reference/context/authorization/#htpasswd-property-user","title":"<code>user</code>","text":"<p>string</p> <p>Holds the user(name) of the successfully authorized user.</p>"},{"location":"reference/context/authorization/#local","title":"Local","text":"<p>Is the result of a successful authorization via Local authorization.</p>"},{"location":"reference/context/authorization/#properties_1","title":"Properties","text":""},{"location":"reference/context/authorization/#local-property-user","title":"<code>user</code>","text":"<p>Local User</p> <p>Holds the successfully authorized user.</p>"},{"location":"reference/context/authorization/#oidc","title":"OpenID Connect (OIDC)","text":"<p>Is the result of a successful authorization via OpenID Connect (OIDC) authorization.</p>"},{"location":"reference/context/authorization/#properties_2","title":"Properties","text":""},{"location":"reference/context/authorization/#oidc-property-token","title":"<code>token</code>","text":"<p>OIDC Token</p> <p>Holds the token information (like access token, expiry, ...) of the authorized user.</p>"},{"location":"reference/context/authorization/#oidc-property-idToken","title":"<code>idToken</code>","text":"<p>OIDC ID Token </p> <p>Can hold the ID Token of the authorized user, if configured and available.</p>"},{"location":"reference/context/authorization/#oidc-property-userInfo","title":"<code>userInfo</code>","text":"<p>OIDC UserInfo </p> <p>Can hold the UserInfo of the authorized user, if configured and available.</p>"},{"location":"reference/context/authorization/#simple","title":"Simple","text":"<p>Is the result of a successful authorization via Simple authorization.</p>"},{"location":"reference/context/authorization/#properties_3","title":"Properties","text":""},{"location":"reference/context/authorization/#simple-property-entry","title":"<code>entry</code>","text":"<p>Simple Entry</p> <p>Holds a representation of the authorized record of Simple authorization entries.</p>"},{"location":"reference/context/authorization/#none","title":"None","text":"<p>Is the result of a successful authorization via None authorization.</p>"},{"location":"reference/context/authorization/#properties_4","title":"Properties","text":"<p>None.</p>"},{"location":"reference/context/connection/","title":"Context Connection","text":"<p>Represents a connection of a user who is currently connected to Bifr\u00f6st.</p>"},{"location":"reference/context/connection/#properties","title":"Properties","text":""},{"location":"reference/context/connection/#property-remote","title":"<code>remote</code>","text":"<p>Remote</p> <p>Identifies the user with its host and username.</p>"},{"location":"reference/context/container/","title":"Context Container","text":"<p>Represents a Docker/OCI container.</p>"},{"location":"reference/context/container/#properties","title":"Properties","text":""},{"location":"reference/context/container/#property-id","title":"<code>id</code>","text":"<p>string</p> <p>The given ID of the container.</p>"},{"location":"reference/context/container/#property-image","title":"<code>image</code>","text":"<p>string</p> <p>The actual image of the container.</p>"},{"location":"reference/context/container/#property-name","title":"<code>name</code>","text":"<p>string </p> <p>The given name of the container.</p>"},{"location":"reference/context/container/#property-flow","title":"<code>flow</code>","text":"<p>Flow Name </p> <p>The flow this container is connected to. It can be absent if this container isn't and never was connected to any flow.</p>"},{"location":"reference/context/core/","title":"Context Core","text":"<p>Represents the core of Bifr\u00f6st.</p>"},{"location":"reference/context/core/#properties","title":"Properties","text":"<p>This context does not provide any kind of properties; but all functions can be used.</p>"},{"location":"reference/context/local-group/","title":"Context Local Group","text":"<p>Represents a local user which is usually resolved by the Local authorization.</p>"},{"location":"reference/context/local-group/#properties","title":"Properties","text":""},{"location":"reference/context/local-group/#property-name","title":"<code>name</code>","text":"<p>string</p> <p>Name of the group.</p>"},{"location":"reference/context/local-group/#property-gid","title":"<code>gid</code>","text":"<p>uint32</p> <p>The group's identifier.</p>"},{"location":"reference/context/local-user/","title":"Context Local User","text":"<p>Represents a local user which is usually resolved by the Local authorization.</p>"},{"location":"reference/context/local-user/#properties","title":"Properties","text":""},{"location":"reference/context/local-user/#property-name","title":"<code>name</code>","text":"<p>string</p> <p>(User)name of the user.</p>"},{"location":"reference/context/local-user/#property-displayName","title":"<code>displayName</code>","text":"<p>string</p> <p>The display name (or title or GECOS) of the user.</p>"},{"location":"reference/context/local-user/#property-uid","title":"<code>uid</code>","text":"<p>uint32</p> <p>The UID (user identifier) of the user.</p>"},{"location":"reference/context/local-user/#property-group","title":"<code>group</code>","text":"<p>Local Group</p> <p>The primary group of the user.</p>"},{"location":"reference/context/local-user/#property-gid","title":"<code>gid</code>","text":"<p>uint32</p> <p>Shortcut for <code>group.gid</code>.</p>"},{"location":"reference/context/local-user/#property-groups","title":"<code>groups</code>","text":"<p>[]Local Group</p> <p>The groups (do not confuse with the primary group) of the user.</p>"},{"location":"reference/context/local-user/#property-gids","title":"<code>gids</code>","text":"<p>[]uint32</p> <p>Shortcut for <code>groups.*.gid</code>.</p>"},{"location":"reference/context/local-user/#property-shell","title":"<code>shell</code>","text":"<p>string</p> <p>The used shell of the user.</p>"},{"location":"reference/context/local-user/#property-homeDir","title":"<code>homeDir</code>","text":"<p>string</p> <p>The home directory of the user.</p>"},{"location":"reference/context/oidc-id-token/","title":"Context OpenID Connect (OIDC) ID Token","text":"<p>Holds the ID information about a user who was authorized via OIDC, if configured and available.</p>"},{"location":"reference/context/oidc-id-token/#properties","title":"Properties","text":""},{"location":"reference/context/oidc-id-token/#property-issuer","title":"<code>issuer</code>","text":"<p>string</p> <p>Holds the <code>iss</code> property of the ID Token.</p>"},{"location":"reference/context/oidc-id-token/#property-audience","title":"<code>audience</code>","text":"<p>string</p> <p>Holds the <code>aud</code> property of the ID Token.</p>"},{"location":"reference/context/oidc-id-token/#property-subject","title":"<code>subject</code>","text":"<p>string</p> <p>Holds the <code>sub</code> property of the ID Token.</p>"},{"location":"reference/context/oidc-id-token/#property-expiry","title":"<code>expiry</code>","text":"<p>datetime</p> <p>Date when this token will expire. You will never get a token where this value is in the past.</p>"},{"location":"reference/context/oidc-id-token/#property-issuedAt","title":"<code>issuedAt</code>","text":"<p>datetime</p> <p>Holds the <code>iat</code> property of the ID Token.</p>"},{"location":"reference/context/oidc-id-token/#property-nonce","title":"<code>nonce</code>","text":"<p>string </p> <p>Can hold the <code>nonce</code> property of the ID Token.</p>"},{"location":"reference/context/oidc-id-token/#property-accessTokenHash","title":"<code>accessTokenHash</code>","text":"<p>string </p> <p>Can hold the <code>at_hash</code> property of the ID Token.</p>"},{"location":"reference/context/oidc-id-token/#property-any","title":"<code>*</code>","text":"<p>any </p> <p>Any other possible value which was added to the ID Token can be referenced. Like: <code>idToken.groups</code> or <code>idToken.tid</code>. This depends on the Identity Provider itself, see IdP specific documentation.</p>"},{"location":"reference/context/oidc-token/","title":"Context OpenID Connect (OIDC) Token","text":"<p>Holds the main information about a user who was authorized via OIDC.</p>"},{"location":"reference/context/oidc-token/#properties","title":"Properties","text":""},{"location":"reference/context/oidc-token/#property-accessToken","title":"<code>accessToken</code>","text":"<p>string</p> <p>Contains the <code>access_token</code> as defined via RFC.</p>"},{"location":"reference/context/oidc-token/#property-tokenType","title":"<code>tokenType</code>","text":"<p>string</p> <p>Contains the <code>token_type</code> as defined via RFC.</p>"},{"location":"reference/context/oidc-token/#property-refreshToken","title":"<code>refreshToken</code>","text":"<p>string </p> <p>Can contain the <code>refresh_token</code> as defined via RFC.</p>"},{"location":"reference/context/oidc-token/#property-expiry","title":"<code>expiry</code>","text":"<p>datetime </p> <p>Can contain the <code>expires_in</code> as defined via RFC.</p>"},{"location":"reference/context/oidc-user-info/","title":"Context OpenID Connect (OIDC) UserInfo","text":"<p>Holds the full user information about a user who was authorized via OIDC, if configured and if available.</p>"},{"location":"reference/context/oidc-user-info/#properties","title":"Properties","text":""},{"location":"reference/context/oidc-user-info/#property-subject","title":"<code>subject</code>","text":"<p>string</p> <p>Subject - Identifier for the End-User at the Issuer (see spec for more details).</p>"},{"location":"reference/context/oidc-user-info/#property-profile","title":"<code>profile</code>","text":"<p>string </p> <p>RL of the End-User's profile page. The contents of this web page SHOULD be about the End-User (see spec for more details).</p>"},{"location":"reference/context/oidc-user-info/#property-email","title":"<code>email</code>","text":"<p>email </p> <p>End-User's preferred e-mail address (see spec for more details).</p>"},{"location":"reference/context/oidc-user-info/#property-emailVerified","title":"<code>emailVerified</code>","text":"<p>bool </p> <p>True if the End-User's e-mail address has been verified, false otherwise. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context specific and dependent upon the trust framework or contractual agreements on which the parties are operating (see spec for more details).</p>"},{"location":"reference/context/preparation-process/","title":"Context Preparation Process","text":"<p>Holds the information about a Preparation Process of Bifr\u00f6st.</p>"},{"location":"reference/context/preparation-process/#properties","title":"Properties","text":""},{"location":"reference/context/preparation-process/#property-id","title":"<code>id</code>","text":"<p>string</p> <p>Each preparation process has its own unique ID (like <code>pull-image</code> of the docker environment).</p> <p>Please refer the documentation of the supported environments for their preparation process kinds.</p>"},{"location":"reference/context/preparation-process/#property-flow","title":"<code>flow</code>","text":"<p>string</p> <p>Holds the name of flow which context holds this preparation process.</p>"},{"location":"reference/context/preparation-process/#property-progress","title":"<code>progress</code>","text":"<p>float32 </p> <p>In case of update events, this holds the current progress of the whole process in <code>0.0</code> to <code>1.0</code>.</p>"},{"location":"reference/context/preparation-process/#property-percentage","title":"<code>percentage</code>","text":"<p>float32 </p> <p>Same as <code>progress</code> but multiplied with <code>100.0</code> to be able to be used directly as percentage value. Therefore, the value can be <code>0.0</code> to <code>100.0</code>.</p>"},{"location":"reference/context/preparation-process/#property-error","title":"<code>error</code>","text":"<p>any </p> <p>In case of error events, this holds the full error information.</p> <p>Danger</p> <p>Should usually not be displayed to end-users because it can contain sensitive system information which should only be exposed inside of log files.</p> <p>This property should only be used for evaluation what should be displayed instead of displaying itself.</p>"},{"location":"reference/context/preparation-process/#property-any","title":"<code>*</code>","text":"<p>any </p> <p>Each preparation process can provide other information, like <code>image</code> in case of a docker <code>pull-image</code> process.</p> <p>Please refer the documentation of the supported environments for their process kinds.</p>"},{"location":"reference/context/remote/","title":"Context Remote","text":"<p>Represents a user who is connected to Bifr\u00f6st.</p>"},{"location":"reference/context/remote/#properties","title":"Properties","text":""},{"location":"reference/context/remote/#property-host","title":"<code>host</code>","text":"<p>Host</p> <p>Host of the remote machine.</p>"},{"location":"reference/context/remote/#property-user","title":"<code>user</code>","text":"<p>string</p> <p>Host of the requested remote user. Usually: <code>&lt;user&gt;@my-great-domain.tld</code></p>"},{"location":"reference/context/simple-entry/","title":"Context Simple Entry","text":"<p>Represents a record of the Simple authorization entries.</p>"},{"location":"reference/context/simple-entry/#properties","title":"Properties","text":""},{"location":"reference/context/simple-entry/#property-name","title":"<code>name</code>","text":"<p>string</p> <p>Holds the user(name) of the successfully authorized user.</p>"},{"location":"reference/environment/","title":"Environments","text":"<p>Bifr\u00f6st executes user sessions within environments. These environments can either be the local environment of the host (on which Bifr\u00f6st runs on) itself or even containers.</p>"},{"location":"reference/environment/#types","title":"Types","text":"<ol> <li><code>docker</code>: Docker executes each user session inside a separate Docker container.</li> <li><code>kubernetes</code>: Kubernetes executes each user session inside a separate POD in a defined cluster.</li> <li><code>local</code>: Local executes on the host itself (same host on which Bifr\u00f6st is running).</li> <li><code>dummy</code>: Dummy for demonstration purposes, it simply prints a message and exists immediately.</li> </ol>"},{"location":"reference/environment/#examples","title":"Examples","text":"<ol> <li>Using local environment:    <pre><code>type: local\nname: \"{{.authorization.user.name}}\"\n</code></pre></li> <li>Using simple kubernetes environment:    <pre><code>type: kubernetes\n</code></pre></li> <li>Using simple docker environment:    <pre><code>type: docker\n</code></pre></li> <li>Using kubernetes environment with Ubuntu image, custom kubeconfig file and additional settings:    <pre><code>type: kubernetes\nconfig: \"/etc/kube/my-kube-config\"\ncontext: \"my-kube-context\"\nimage: ubuntu\n## Using /bin/bash instead of /bin/sh,\n## because it does exist in the image\nshellCommand: [/bin/bash]\nexecCommand: [/bin/bash, -c]\n\n## Only allow login if the OIDC's groups has \"my-great-group-uuid\"\n## ...and the tid (tenant ID) is \"my-great-tenant-uuid\"\nloginAllowed: |\n    {{ and\n      (.authorization.idToken.groups | has \"my-great-group-uuid\")\n      (.authorization.idToken.tid    | eq  \"my-great-tenant-uuid\")\n    }}\n</code></pre></li> <li>Using docker environment with Ubuntu image and additional settings:    <pre><code>type: docker\nimage: ubuntu\n## Using /bin/bash instead of /bin/sh,\n## because it does exist in the image\nshellCommand: [/bin/bash]\nexecCommand: [/bin/bash, -c]\n</code></pre></li> <li>Using dummy environment with a simple message:    <pre><code>type: dummy\nbanner: \"Hello, {{.authorization.idToken.name}}!\\n\"\n</code></pre></li> </ol>"},{"location":"reference/environment/docker/","title":"Docker environment","text":"<p>When using Docker environments, each user session runs in a separate Docker container. This is in contrast to the local environment, where each user session runs on the same host as Bifr\u00f6st.</p> <p>This is useful if you explicitly do not want to give users access to the host itself, but to environments where they can work with defined toolsets. This is especially true, if you want to create demo or training environments.</p> <p>In another use case you can set up a Bastion/Jump host, what allows the user to jump from one server to another network. Using different networks can be beneficial, too.</p>"},{"location":"reference/environment/docker/#configuration","title":"Configuration","text":""},{"location":"reference/environment/docker/#property-type","title":"<code>type</code>","text":"<p>Environment Type  = <code>\"docker\"</code></p> <p>Has to be set to <code>docker</code> to enable the docker environment.</p>"},{"location":"reference/environment/docker/#property-loginAllowed","title":"<code>loginAllowed</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>Has to be true (after being evaluated) that the user is allowed to use this environment.</p>"},{"location":"reference/environment/docker/#property-loginAllowed-examples","title":"Examples","text":"<ol> <li>Require that the existing local user has the group <code>ssh</code>:    <pre><code>loginAllowed: |\n   {{ or\n       (.authorization.user.group.name | eq \"ssh\" )\n       (.authorization.user.groups     | firstMatching `{{.name | eq \"ssh\"}}`)\n   }}\n</code></pre></li> </ol>"},{"location":"reference/environment/docker/#property-host","title":"<code>host</code>","text":"<p>string  Authorization = <code>\"{{ env `DOCKER_HOST` }}\"</code></p> <p>URL how to connect to the API endpoint of the docker compatible daemon.</p> <p>Accepted protocols are:</p> <ol> <li><code>http</code></li> <li><code>https</code></li> <li><code>tcp</code></li> <li><code>unix</code> (only supported on unix based systems)</li> <li><code>npipe</code> (only supported on Windows)</li> </ol> <p>If this variable is empty (which can be also the case if <code>{{ env `DOCKER_HOST` }}</code> evaluates to empty, because the environment variable is not set), the system specific connection will be chosen:</p> <ul> <li>Unix (such as Linux): <code>unix:///var/run/docker.sock</code></li> <li>Windows: <code>npipe:////./pipe/docker_engine</code></li> </ul>"},{"location":"reference/environment/docker/#property-apiVersion","title":"<code>apiVersion</code>","text":"<p>string  Authorization = </p> <pre><code>\"{{ env \\`DOCKER_API_VERSION\\` }}\"\n</code></pre> <p>Defines which version of Docker API should be chosen for communication. In doubt leave this blank.</p>"},{"location":"reference/environment/docker/#property-certPath","title":"<code>certPath</code>","text":"<p>File path Authorization = </p> <pre><code>\"{{ env \\`DOCKER_CERT_PATH\\` }}\"\n</code></pre> <p>Is a directory which should contain the following files:</p> <ul> <li><code>key.pem</code>: Private key Bifr\u00f6st should connect to the Docker API with.</li> <li><code>cert.pem</code> Certificate Bifr\u00f6st should present when connect to the Docker API.</li> <li><code>ca.pem</code>: Certificate authorities to check the certificate of the Docker API Host against.</li> </ul> <p>If this variable is empty (which can be also the case if <code>{{ env `DOCKER_CERT_PATH` }}</code> evaluates to empty) and <code>tlsVerify</code> is set to <code>false</code>, all Docker API Hosts are accepted.</p>"},{"location":"reference/environment/docker/#property-tlsVerify","title":"<code>tlsVerify</code>","text":"<p>bool  Authorization = </p> <pre><code>\"{{ env \\`DOCKER_TLS_VERIFY\\` | ne \\`\\` }}\"\n</code></pre> <p>If this variable is <code>false</code> (which can be also the case if <code>{{ env `DOCKER_TLS_VERIFY` }}</code> evaluates to empty), all Docker API Hosts are accepted.</p> <p>Danger</p> <p>Setting this to <code>false</code> is only recommend, if connecting to the local socket connection (on the same machine - see <code>host</code>'s default behavior).</p>"},{"location":"reference/environment/docker/#property-image","title":"<code>image</code>","text":"<p>string  Authorization = <code>\"alpine\"</code></p> <p>Which OCI/Docker image should be used for this environment.</p> <p>Everything available within this image will be also available to the user who is connecting to the container using this image. Therefore, you should consider to creating your custom images if you need additional features like <code>kubectl</code>, <code>skopeo</code>, ... and use this one here.</p> <p>This image needs to contain a valid shell executable.</p> <p><code>ENTRYPOINT</code> and <code>CMD</code> settings of the image will be ignored.</p>"},{"location":"reference/environment/docker/#property-imagePullPolicy","title":"<code>imagePullPolicy</code>","text":"<p>Pull Policy Authorization = <code>\"ifAbsent\"</code></p> <p>Defines what should happen if the container starts with the required image of the container.</p> <p>If the image needs to be pulled, it will trigger the <code>image-pull</code> preparation process.</p>"},{"location":"reference/environment/docker/#property-imagePullCredentials","title":"<code>imagePullCredentials</code>","text":"<p>Docker Pull Credentials Authorization</p> <p>Defines credentials which should be used to pull the defined <code>image</code>.</p>"},{"location":"reference/environment/docker/#property-imagePullCredentials-examples","title":"Examples","text":"<ol> <li>Using direct json:    <pre><code>imagePullCredentials: |\n {\"username\":\"foo\",\"password\":\"bar\"}\n</code></pre></li> <li>Using base64 URL encoded json:    <pre><code>imagePullCredentials: |\n eyJ1c2VybmFtZSI6ImZvbyIsInBhc3N3b3JkIjoiYmFyIn0\n</code></pre></li> <li>Using content from file:    <pre><code>imagePullCredentials: \"{{ file `/etc/engity/bifroest/secrets/my-great-secret` }}\"\n</code></pre></li> <li>Using content from environment variable:    <pre><code>imagePullCredentials: \"{{ env `MY_GREAT_SECRET` }}\"\n</code></pre></li> </ol>"},{"location":"reference/environment/docker/#property-networks","title":"<code>networks</code>","text":"<p>[]string  Authorization = <code>[\"default\"]</code></p> <p>Defines the container networks this container should be connected to.</p> <p>Empty always defaults to <code>[\"default\"]</code>.</p> <p>Note</p> <p>As long as <code>impPublishHost</code> isn't set, the first network should be always reachable by Bifr\u00f6st itself. This can be either the case if Bifr\u00f6st itself runs inside of Docker (Bifr\u00f6st in Docker) or it runs on the host machine and there is a valid route (which is the default Linux native, but not on Docker/Podman for Desktop).</p>"},{"location":"reference/environment/docker/#property-volumes","title":"<code>volumes</code>","text":"<p>[]string  Authorization</p> <p>Defines which volumes should be mounted into the container. Each entry is an individual mount statement.</p> <p>This is the equivalent of <code>-v</code>/<code>--volume</code> flag of Docker. See Bind mounts documentation of Docker about the syntax of these entries.</p> <p>We recommend to use <code>mounts</code> instead, because it is easier to understand. <code>volumes</code> is the older version of the notation and known by experienced users.</p>"},{"location":"reference/environment/docker/#property-mounts","title":"<code>mounts</code>","text":"<p>[]string  Authorization</p> <p>Defines which volumes should be mounted into the container. Each entry is an individual mount statement.</p> <p>This is the equivalent of <code>--mount</code> flag of Docker. See Bind mounts documentation of Docker about the syntax of these entries.</p>"},{"location":"reference/environment/docker/#property-capabilities","title":"<code>capabilities</code>","text":"<p>[]string  Authorization</p> <p>List of Unix kernel capabilities to be added to the container. This enables a more fine-grained version in contrast to give all capabilities to the container with <code>privileged</code> = <code>true</code>.</p> <p>Does only work on Unix based systems.</p>"},{"location":"reference/environment/docker/#property-privileged","title":"<code>privileged</code>","text":"<p>bool  Authorization = <code>false</code></p> <p>If this is set to <code>true</code> this container will have all capabilities of the system.</p> <p>Danger</p> <p>Only enable this feature if you really need this, and you know what you're doing.</p>"},{"location":"reference/environment/docker/#property-dnsServers","title":"<code>dnsServers</code>","text":"<p>[]string  Authorization</p> <p>Defines a list of external DNS server the container should use.</p>"},{"location":"reference/environment/docker/#property-dnsSearch","title":"<code>dnsSearch</code>","text":"<p>[]string  Authorization</p> <p>Defines custom DNS search domains for the container.</p>"},{"location":"reference/environment/docker/#property-shellCommand","title":"<code>shellCommand</code>","text":"<p>[]string  Authorization = <code>\"&lt;os specific&gt;\"</code></p> <p>The shell which should be used to execute the user into.</p> <p>If not defined, the following command will be used:</p> <ul> <li>Linux: <code>[\"/bin/sh\"]</code></li> <li>Windows: <code>[\"C:\\WINDOWS\\system32\\cmd.exe\"]</code></li> </ul>"},{"location":"reference/environment/docker/#property-execCommand","title":"<code>execCommand</code>","text":"<p>[]string  Authorization = <code>\"&lt;os specific&gt;\"</code></p> <p>If execute is used, this is the command prefix which will used for the command.</p> <p>If not defined, the following command will be used:</p> <ul> <li>Linux: <code>[\"/bin/sh\", \"-c\"]</code></li> <li>Windows: <code>[\"C:\\WINDOWS\\system32\\cmd.exe\", \"/C\"]</code></li> </ul>"},{"location":"reference/environment/docker/#property-sftpCommand","title":"<code>sftpCommand</code>","text":"<p>[]string  Authorization = <code>[\"bifroest\", \"sftp-server\"]</code></p> <p>Defines the sftp server command which should be used. Usually you should not be required to modify this, because by default Bifr\u00f6st is handling this by itself.</p>"},{"location":"reference/environment/docker/#property-directory","title":"<code>directory</code>","text":"<p>File Path Authorization</p> <p>Defines the working directory of the initial process inside the container for each execution.</p> <p>If not defined the value <code>WORKDIR</code> will be used. If this is absent it defaults to: <code>/</code>.</p>"},{"location":"reference/environment/docker/#property-user","title":"<code>user</code>","text":"<p>string  Authorization</p> <p>Defines the user will run with inside the container.</p> <p>If not defined the value <code>USER</code> will be used. If this is absent it defaults to: <code>root</code>.</p>"},{"location":"reference/environment/docker/#property-banner","title":"<code>banner</code>","text":"<p>string  Authorization = <code>\"\"</code></p> <p>Will be displayed to the user upon connection to its environment.</p>"},{"location":"reference/environment/docker/#property-banner-examples","title":"Examples","text":"<ol> <li>If local user is used, show its name in a message:    <pre><code>banner: \"Hello, {{.authorization.user.name}}!\\n\"\n</code></pre></li> <li>If users authorized via OIDC is used, show its name in a message:    <pre><code>banner: \"Hello, {{.authorization.idToken.name}}!\\n\"\n</code></pre></li> </ol>"},{"location":"reference/environment/docker/#property-portForwardingAllowed","title":"<code>portForwardingAllowed</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>If <code>true</code>, users are allowed to use SSH's port forwarding mechanism.</p>"},{"location":"reference/environment/docker/#property-impPublishHost","title":"<code>impPublishHost</code>","text":"<p>string  Authorization</p> <p>If this property is set, the port of the IMP process will be not just exposed on the container network, but also on this host.</p> <p>At this address Bifr\u00f6st will then connect to the IMP process inside the container.</p> <p>Warning</p> <p>To set this property makes only sense as long you have a firewall in place, which prevents external attackers to connect to the host ports, and you have no other choice. Usually Bifr\u00f6st can connect via the container networks to IMP directly (see <code>networks</code>).</p> <p>This is usually required, if you run Bifr\u00f6st on a Docker/Podman for Desktop installation (such as on Windows or macOS) where the Docker daemon does not run on the host directly, but inside a virtual machine.</p>"},{"location":"reference/environment/docker/#property-cleanOrphan","title":"<code>cleanOrphan</code>","text":"<p>bool  Container = <code>true</code></p> <p>While the housekeeping iterations this environment will look for containers that can be inspected by its docker daemon connection if there is any container that does not belong to any flow of this Bifr\u00f6st instance.</p> <p>This is useful to clean up old containers which are leftovers after you have changed the configuration of Bifr\u00f6st.</p> <p>Warning</p> <p>If multiple Bifr\u00f6st installations are using the same Docker host, this should be disabled. Otherwise, each instance is removing the container of the other instance.</p>"},{"location":"reference/environment/docker/#preparationProcesses","title":"Preparation Processes","text":"<p>If events about preparation processes are emitted by this environment, they are picked up by connections (like SSH) and handled.</p> <p>The docker environment emits the following processes:</p>"},{"location":"reference/environment/docker/#preparationProcess-pull-image","title":"<code>pull-image</code>","text":"<p>In cases an image needs to be pulled, either it does not exist or <code>imagePullPolicy</code> is to <code>always</code>, the image pull process starts. As this will block the user interaction with its session, this process event is emitted. It makes it possible to show the progress of download to the user.</p>"},{"location":"reference/environment/docker/#properties","title":"Properties","text":""},{"location":"reference/environment/docker/#preparationProcess-pull-image-property-image","title":"<code>image</code>","text":"<p>string</p> <p>Holds the tag of the image to be downloaded.</p>"},{"location":"reference/environment/docker/#examples","title":"Examples","text":"<ol> <li>Simple:    <pre><code>type: docker\n</code></pre></li> <li>With ubuntu image:    <pre><code>type: docker\nimage: ubuntu\n## Using /bin/bash instead of /bin/sh,\n## because it does exist in the image\nshellCommand: [/bin/bash]\nexecCommand: [/bin/bash, -c]\n\n## Only allow login if the OIDC's groups has \"my-great-group-uuid\"\n## ...and the tid (tenant ID) is \"my-great-tenant-uuid\"\nloginAllowed: |\n    {{ and\n      (.authorization.idToken.groups | has \"my-great-group-uuid\")\n      (.authorization.idToken.tid    | eq  \"my-great-tenant-uuid\")\n    }}\n</code></pre></li> <li>Using my own registry with secret from file:    <pre><code>type: docker\nimage: my.own.registry.com/foo/bar\n## Using the pull credentials, which are stored inside:\n## /etc/engity/bifroest/secrets/my.own.registry.com\nimagePullCredentials: \"{{ file `/etc/engity/bifroest/secrets/my.own.registry.com` }}\"\n</code></pre></li> <li>Using my own registry with secret from environment variable:    <pre><code>type: docker\nimage: my.own.registry.com/foo/bar\n## Using the pull credentials, which are stored inside\n## MY_GREAT_SECRET environment variable\nimagePullCredentials: \"{{ env `MY_GREAT_SECRET` }}\"\n</code></pre></li> </ol>"},{"location":"reference/environment/docker/#compatibility","title":"Compatibility","text":"<code>linux</code> <code>windows</code> / /"},{"location":"reference/environment/dummy/","title":"Dummy environment","text":"<p>An environment created for demonstration purposes, it simply prints a message and exists immediately.</p> <p>This feature is usually only makes sense for cases where you want to create dummy configurations of Bifr\u00f6st to demonstrate some functionality, like we're utilizing it in our demonstration configurations: contrib/configurations/dummy-windows.yaml.</p>"},{"location":"reference/environment/dummy/#configuration","title":"Configuration","text":""},{"location":"reference/environment/dummy/#property-type","title":"<code>type</code>","text":"<p>Environment Type  = <code>\"dummy\"</code></p> <p>Has to be set to <code>dummy</code> to enable the dummy environment.</p>"},{"location":"reference/environment/dummy/#property-banner","title":"<code>banner</code>","text":"<p>string  Authorization = <code>\"\"</code></p> <p>Will be displayed to the user upon connection to its environment.</p>"},{"location":"reference/environment/dummy/#property-banner-examples","title":"Examples","text":"<ol> <li>If simple user is used, show its name in a message:    <pre><code>banner: \"Hello, {{.authorization.entry.name}}!\\n\"\n</code></pre></li> <li>If users authorized via OIDC is used, show its name in a message:    <pre><code>banner: \"Hello, {{.authorization.idToken.name}}!\\n\"\n</code></pre></li> </ol>"},{"location":"reference/environment/dummy/#property-exitCode","title":"<code>exitCode</code>","text":"<p>int64  Authorization = <code>0</code></p> <p>After <code>banner</code> was printed to the user, the environment will exit with this code.</p>"},{"location":"reference/environment/dummy/#examples","title":"Examples","text":"<ol> <li>Simple:    <pre><code>type: dummy\n</code></pre></li> <li>With message:    <pre><code>type: dummy\nbanner: \"Hello, {{.authorization.idToken.name}}!\\n\"\n</code></pre></li> </ol>"},{"location":"reference/environment/dummy/#compatibility","title":"Compatibility","text":"<code>linux</code> <code>windows</code> / /"},{"location":"reference/environment/kubernetes/","title":"Kubernetes environment","text":"<p>When using Kubernetes environments, each user session runs in a dedicated Pod inside a defined Kubernetes cluster. This is in contrast to the local environment, where each user session runs on the same host as Bifr\u00f6st.</p>"},{"location":"reference/environment/kubernetes/#with-bifrost","title":"With Bifr\u00f6st","text":"<p>As the resulting Pod runs inside of Kubernetes and the terminal session will be connected to this Pod, the user can access (depending on the cluster settings) access everything directly inside the cluster.</p> <p>You can prepare images with all required tolls installed (like database client, curl, ...) and can access all resource directly with the cluster internal addresses like <code>my-service.my-namespace</code> (or <code>my-service.my-namespace.svc.cluster.local</code>). Assuming at <code>my-service.my-namespace</code> is a REST service running at port <code>80</code> the following command will run out-of-the box once you connected via ssh: <pre><code>curl http://my-service.my-namespace\n</code></pre></p> <p>The SSH-client port-forwarding, works too and even the SOCKS5 proxy, where you can call every cluster internal URL from within your desktop browser.</p> <p>If there is also kubectl installed in the used image and an adequate serviceAccount is configured, you can even use <code>kubectl</code> without any further authorizations.</p> <p>This simply means: You do not need tools like <code>kubectl</code> locally installed and configured, your favorite SSH-client is enough.</p>"},{"location":"reference/environment/kubernetes/#without-bifrost","title":"Without Bifr\u00f6st","text":"<p>Usually there are the following scenarios used to access resources inside a kubernetes cluster:</p> <ol> <li>Directly from the local command line via kubectl using dedicated credentials, which needs direct access to the cluster API, which may not always be desirable.</li> <li>Using a Bastion/Jump Host where all the stuff is already installed, as in point 1.</li> </ol> <p>Or to interact with resources inside the cluster itself (like connect to a database, REST service, ...), usually the following scenarios are used:</p> <ol> <li>Using kubectl (in any way as described before), using port forwarding.</li> <li>Or (also with kubectl) execute inside an existing inside the desired cluster with all required tools installed.</li> </ol>"},{"location":"reference/environment/kubernetes/#configuration","title":"Configuration","text":""},{"location":"reference/environment/kubernetes/#property-type","title":"<code>type</code>","text":"<p>Environment Type  = <code>\"kubernetes\"</code></p> <p>Has to be set to <code>kubernetes</code> to enable the Kubernetes environment.</p>"},{"location":"reference/environment/kubernetes/#property-config","title":"<code>config</code>","text":"<p>Kubeconfig Core</p> <p>Holds a kubeconfig (in YAML format) which defines the access to the desired Kubernetes cluster.</p> <p>Ensure that the used configuration points to a user/service account with sufficient permissions to get/list/watch/create/modify/delete pods, secrets (depends on the configuration of Bifr\u00f6st) and namespaces (depends on the configuration of Bifr\u00f6st).</p> <p>If the content is explicitly set to <code>incluster</code> it assumes that Bifr\u00f6st runs inside a Kubernetes Pod and a valid service account was configured, all required resources are present (<code>KUBERNETES_SERVICE_HOST</code> and <code>KUBERNETES_SERVICE_PORT</code> environment variable, <code>/var/run/secrets/kubernetes.io/serviceaccount/token</code>, <code>/var/run/secrets/kubernetes.io/serviceaccount/ca.crt</code> and <code>/var/run/secrets/kubernetes.io/serviceaccount/namespace</code>).</p>"},{"location":"reference/environment/kubernetes/#property-config-default","title":"Default behavior","text":"<p>If this property is not defined, the following steps will be evaluated:</p> <ol> <li>If the environment variable <code>KUBE_CONFIG</code> exists, its content will be evaluated.</li> <li>If the environment variable <code>KUBECONFIG</code> exists it should contain file names, these will be read and its content will be evaluated.</li> <li>If the file <code>~/.kube/config</code> exists, its content will be read and its content will be evaluated.</li> <li>If all dependencies like <code>incluster</code> exists, it will be used.</li> <li>Fail.</li> </ol>"},{"location":"reference/environment/kubernetes/#property-config-examples","title":"Examples","text":"<ol> <li>Using direct yaml:    <pre><code>config: |\n     clusters:\n     - cluster:\n       name: my-cluster\n         server: https://k8s.example.org/k8s/clusters/c-xxyyzz\n     users:\n     - name: my-auth\n         token: foo\n     current-context: my-context\n     contexts:\n     - context:\n       name: my-context\n         user: my-auth\n         cluster: my-cluster\n</code></pre></li> <li>Using content from file:    <pre><code>config: \"{{ file `/etc/engity/bifroest/kubernetes/my-config` }}\"\n</code></pre></li> <li>Using content from environment variable:    <pre><code>config: \"{{ env `MY_GREAT_CONFIG` }}\"\n</code></pre></li> <li>Use <code>incluster</code> config:    <pre><code>config: \"incluster\"\n</code></pre></li> </ol>"},{"location":"reference/environment/kubernetes/#property-context","title":"<code>context</code>","text":"<p>string  Core</p> <p>Defines which context of the config should be used.</p> <p>If not defined the default one of the config will be used. If also there is nothing defined, this will result in an error.</p>"},{"location":"reference/environment/kubernetes/#property-loginAllowed","title":"<code>loginAllowed</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>Has to be true (after being evaluated) that the user is allowed to use this environment.</p>"},{"location":"reference/environment/kubernetes/#property-loginAllowed-examples","title":"Examples","text":"<ol> <li>Require that the existing local user has the group <code>ssh</code>:    <pre><code>loginAllowed: |\n   {{ or\n       (.authorization.user.group.name | eq \"ssh\" )\n       (.authorization.user.groups     | firstMatching `{{.name | eq \"ssh\"}}`)\n   }}\n</code></pre></li> </ol>"},{"location":"reference/environment/kubernetes/#property-name","title":"<code>name</code>","text":"<p>string  Authorization = <code>\"bifroest-{{.session.id}}\"</code></p> <p>Kubernetes name of the Pod which will be created.</p>"},{"location":"reference/environment/kubernetes/#property-namespace","title":"<code>namespace</code>","text":"<p>string  Authorization</p> <p>Kubernetes namespace where the Pod will be created inside.</p> <p>If this is empty, the configured namespace of the provided config will be used. If this is empty too, <code>default</code> will be used.</p> <p>If the namespace does not exist, it will be created.</p>"},{"location":"reference/environment/kubernetes/#property-os","title":"<code>os</code>","text":"<p>Os Authorization = <code>\"linux\"</code></p> <p>Defines the operating system the resulting container should use. There are only support values supported where also a distribution of Bifr\u00f6st in combination with the matching value of the arch property exists.</p>"},{"location":"reference/environment/kubernetes/#property-arch","title":"<code>arch</code>","text":"<p>Arch Authorization = <code>\"amd64\"</code></p> <p>Defines the architecture the resulting container should use. There are only support values supported where also a distribution of Bifr\u00f6st in combination with the matching value of the os property exists.</p>"},{"location":"reference/environment/kubernetes/#property-serviceAccountName","title":"<code>serviceAccountName</code>","text":"<p>string  Authorization = <code>\"\"</code></p> <p>Is the name of the Kubernetes Service Account which should be used by the Pod will be created.</p> <p>It is used to grant/restrict the direct access to the Kubernetes internal APIs, by creating role-base access control (RBAC) matching the service account. For more details see Grant ServiceAccount permissions of the Kubernetes documentation.</p> <p>If this is configured, a kubectl installed inside the Pod's image, can access the clusters resources (following the permissions granted via RBAC).</p>"},{"location":"reference/environment/kubernetes/#property-image","title":"<code>image</code>","text":"<p>string  Authorization = <code>\"alpine\"</code></p> <p>An OCI/Docker image which should be used for the container. Everything inside this image will be available to the user who is executed via SSH into this Pod's container.</p> <p>There can be any public available image be used or also private images. If you're using private images, you need to provide imagePullSecretName and/or imagePullCredentials. Always ensure that the image can be accessed from the Kubernetes cluster itself; Bifr\u00f6st itself will not interact with this image.</p>"},{"location":"reference/environment/kubernetes/#property-imagePullPolicy","title":"<code>imagePullPolicy</code>","text":"<p>Pull Policy Authorization = <code>\"ifAbsent\"</code></p> <p>Controls when the image of the resulting Pod should be pulled.</p>"},{"location":"reference/environment/kubernetes/#property-imagePullSecretName","title":"<code>imagePullSecretName</code>","text":"<p>string  Authorization</p> <p>If defined, this secret will be used to pull the defined image from the image registry. This is usually necessary if private images are used. See Kubernetes documentation how to pull images from private registries for more information and to find out how to create such a secret.</p> <p>This secret has to exist, otherwise the creation of the Pod will fail.</p> <p>If imagePullCredentials is defined, this secret does not have to exist, it will be created, based on this property's content. If <code>imagePullSecretName</code> is empty in this case, the resulting name will be <code>pull-secret.&lt;pod-name&gt;</code>.</p>"},{"location":"reference/environment/kubernetes/#property-imagePullCredentials","title":"<code>imagePullCredentials</code>","text":"<p>string  Authorization</p> <p>If defined, these credentials are used to pull the defined image from the image registry. It will result in a pull secret which will be created with the name of imagePullSecretName and the content of this property.</p>"},{"location":"reference/environment/kubernetes/#property-imagePullCredentials-examples","title":"Examples","text":"<ol> <li>Using direct json:    <pre><code>imagePullCredentials: |\n {\"username\":\"foo\",\"password\":\"bar\"}\n</code></pre></li> <li>Using base64 URL encoded json:    <pre><code>imagePullCredentials: |\n eyJ1c2VybmFtZSI6ImZvbyIsInBhc3N3b3JkIjoiYmFyIn0\n</code></pre></li> <li>Using content from file:    <pre><code>imagePullCredentials: \"{{ file `/etc/engity/bifroest/secrets/my-great-secret` }}\"\n</code></pre></li> <li>Using content from environment variable:    <pre><code>imagePullCredentials: \"{{ env `MY_GREAT_SECRET` }}\"\n</code></pre></li> </ol>"},{"location":"reference/environment/kubernetes/#property-readyTimeout","title":"<code>readyTimeout</code>","text":"<p>Duration Authorization = <code>\"5m\"</code></p> <p>Defines the maximum time the Pod is allowed to be successfully started within. If this time is passed and the Pod is not ready, it will be marked as failed and will be reported back to the user who tries to connect via SSH.</p>"},{"location":"reference/environment/kubernetes/#property-removeTimeout","title":"<code>removeTimeout</code>","text":"<p>Duration = <code>\"1m\"</code></p> <p>Defines the maximum time the Pod is allowed to gracefully shutdown within. Longer will result in an error.</p>"},{"location":"reference/environment/kubernetes/#property-capabilities","title":"<code>capabilities</code>","text":"<p>[]string  Authorization</p> <p>List of Unix kernel capabilities to be added to the container. This enables a more fine-grained version in contrast to give all capabilities to the container with <code>privileged</code> = <code>true</code>.</p> <p>Does only work on Unix based systems.</p>"},{"location":"reference/environment/kubernetes/#property-privileged","title":"<code>privileged</code>","text":"<p>bool  Authorization = <code>false</code></p> <p>If this is set to <code>true</code> this container will have all capabilities of the system.</p> <p>Danger</p> <p>Only enable this feature if you really need this, and you know what you're doing.</p>"},{"location":"reference/environment/kubernetes/#property-dnsServers","title":"<code>dnsServers</code>","text":"<p>[]string  Authorization</p> <p>Defines a list of external DNS server the container should use.</p>"},{"location":"reference/environment/kubernetes/#property-dnsSearch","title":"<code>dnsSearch</code>","text":"<p>[]string  Authorization</p> <p>Defines custom DNS search domains for the container.</p>"},{"location":"reference/environment/kubernetes/#property-shellCommand","title":"<code>shellCommand</code>","text":"<p>[]string  Authorization = <code>\"&lt;os specific&gt;\"</code></p> <p>The shell which should be used to execute the user into.</p> <p>If not defined, the following command will be used:</p> <ul> <li>Linux: <code>[\"/bin/sh\"]</code></li> <li>Windows: <code>[\"C:\\WINDOWS\\system32\\cmd.exe\"]</code></li> </ul>"},{"location":"reference/environment/kubernetes/#property-execCommand","title":"<code>execCommand</code>","text":"<p>[]string  Authorization = <code>\"&lt;os specific&gt;\"</code></p> <p>If execute is used, this is the command prefix which will used for the command.</p> <p>If not defined, the following command will be used:</p> <ul> <li>Linux: <code>[\"/bin/sh\", \"-c\"]</code></li> <li>Windows: <code>[\"C:\\WINDOWS\\system32\\cmd.exe\", \"/C\"]</code></li> </ul>"},{"location":"reference/environment/kubernetes/#property-sftpCommand","title":"<code>sftpCommand</code>","text":"<p>[]string  Authorization = <code>[\"bifroest\", \"sftp-server\"]</code></p> <p>Defines the sftp server command which should be used. Usually you should not be required to modify this, because by default Bifr\u00f6st is handling this by itself.</p>"},{"location":"reference/environment/kubernetes/#property-directory","title":"<code>directory</code>","text":"<p>File Path Authorization</p> <p>Defines the working directory of the initial process inside the container for each execution.</p> <p>If not defined the value <code>WORKDIR</code> will be used. If this is absent it defaults to: <code>/</code>.</p>"},{"location":"reference/environment/kubernetes/#property-user","title":"<code>user</code>","text":"<p>string  Authorization</p> <p>Defines the user which will run inside the container.</p> <p>If not defined the value <code>USER</code> will be used. If this is absent it defaults to: <code>root</code>.</p>"},{"location":"reference/environment/kubernetes/#property-group","title":"<code>group</code>","text":"<p>string  Authorization</p> <p>Defines the group of the user which will run inside the container.</p> <p>If this is absent it defaults to the group of the user.</p>"},{"location":"reference/environment/kubernetes/#property-banner","title":"<code>banner</code>","text":"<p>string  Authorization = <code>\"\"</code></p> <p>Will be displayed to the user upon connection to its environment.</p>"},{"location":"reference/environment/kubernetes/#property-banner-examples","title":"Examples","text":"<ol> <li>If local user is used, show its name in a message:    <pre><code>banner: \"Hello, {{.authorization.user.name}}!\\n\"\n</code></pre></li> <li>If users authorized via OIDC is used, show its name in a message:    <pre><code>banner: \"Hello, {{.authorization.idToken.name}}!\\n\"\n</code></pre></li> </ol>"},{"location":"reference/environment/kubernetes/#property-portForwardingAllowed","title":"<code>portForwardingAllowed</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>If <code>true</code>, users are allowed to use SSH's port forwarding mechanism.</p>"},{"location":"reference/environment/kubernetes/#property-cleanOrphan","title":"<code>cleanOrphan</code>","text":"<p>bool  Container = <code>true</code></p> <p>While the housekeeping iterations this environment will look for pods that can be inspected based on the provided config. Is there any container that does not belong to any flow of this Bifr\u00f6st instance, it will be removed.</p> <p>This is useful to clean up old pods which are leftovers after you have changed the configuration of Bifr\u00f6st.</p> <p>Warning</p> <p>If multiple Bifr\u00f6st installations are using the same config/cluster, this should be disabled. Otherwise, each instance is removing the pods of the other instance.</p>"},{"location":"reference/environment/kubernetes/#preparationProcesses","title":"Preparation Processes","text":"<p>If events about preparation processes are emitted by this environment, they are picked up by connections (like SSH) and handled.</p> <p>The kubernetes environment can emit the following processes:</p>"},{"location":"reference/environment/kubernetes/#preparationProcess-create-pod","title":"<code>create-pod</code>","text":"<p>As the creation of a pod creation can take up-to some minutes, this process will be emitted. As this process does not really expose progress of downloading a required image or similar, there is currently no progress reporting supported (only a fake 0% .. 30% .. 100%).</p>"},{"location":"reference/environment/kubernetes/#properties","title":"Properties","text":""},{"location":"reference/environment/kubernetes/#preparationProcess-create-pod-property-name","title":"<code>name</code>","text":"<p>string</p> <p>Target name of the Pod. See property name for more details.</p>"},{"location":"reference/environment/kubernetes/#preparationProcess-create-pod-property-namespace","title":"<code>namespace</code>","text":"<p>string</p> <p>Target namespace of the Pod. See property namespace for more details.</p>"},{"location":"reference/environment/kubernetes/#preparationProcess-create-pod-property-image","title":"<code>image</code>","text":"<p>string</p> <p>Target image of the Pod. See property image for more details.</p>"},{"location":"reference/environment/kubernetes/#preparationProcess-remove-pod","title":"<code>remove-pod</code>","text":"<p>If it is required to remove an existing pod before a new will be created, this process can be made visible to the user. There is currently no progress reporting supported.</p>"},{"location":"reference/environment/kubernetes/#properties_1","title":"Properties","text":""},{"location":"reference/environment/kubernetes/#preparationProcess-remove-pod-property-name","title":"<code>name</code>","text":"<p>string</p> <p>Name of the existing Pod. See property name for more details.</p>"},{"location":"reference/environment/kubernetes/#preparationProcess-remove-pod-property-namespace","title":"<code>namespace</code>","text":"<p>string</p> <p>Namespace of the existing Pod. See property namespace for more details.</p>"},{"location":"reference/environment/kubernetes/#examples","title":"Examples","text":"<ol> <li> <p>Basic     <pre><code>type: kubernetes\n## This will create a Kubernetes environment based on the\n## default context, defined inside `~/.kube/config`\n## OR the content of the environment variable KUBE_CONFIG\n## with alpine image.\n</code></pre></p> </li> <li> <p>Explicit context     <pre><code>type: kubernetes\ncontext: \"my-context\"\n## This will create a Kubernetes environment based on the\n## context \"my-context\", defined inside `~/.kube/config`,\n## with alpine image.\n</code></pre></p> </li> <li> <p>Custom kube-config     <pre><code>type: kubernetes\nconfig: \"/etc/kube/my-kube-config\"\n## This will create a Kubernetes environment based on the\n## default context of the kube config stored inside\n## /etc/kube/my-kube-config.\n</code></pre></p> </li> <li> <p>With ubuntu image, custom shell and login restriction     <pre><code>type: kubernetes\n## This will create a Kubernetes environment based on the\n## default context, defined inside `~/.kube/config`.\n\nimage: ubuntu\n## Using /bin/bash instead of /bin/sh,\n## because it does exist in the image\nshellCommand: [/bin/bash]\nexecCommand: [/bin/bash, -c]\n\n## Only allow login if the OIDC's groups has \"my-great-group-uuid\"\n## ...and the tid (tenant ID) is \"my-great-tenant-uuid\"\nloginAllowed: |\n   {{ and\n     (.authorization.idToken.groups | has \"my-great-group-uuid\")\n     (.authorization.idToken.tid    | eq  \"my-great-tenant-uuid\")\n   }}\n</code></pre></p> </li> <li> <p>Using my own registry with secret from file:    <pre><code>type: kubernetes\nimage: my.own.registry.com/foo/bar\n## Using the pull credentials, which are stored inside:\n## /etc/engity/bifroest/secrets/my.own.registry.com\nimagePullCredentials: \"{{ file `/etc/engity/bifroest/secrets/my.own.registry.com` }}\"\n</code></pre></p> </li> <li> <p>Using my own registry with secret from environment variable:    <pre><code>type: kubernetes\nimage: my.own.registry.com/foo/bar\n## Using the pull credentials, which are stored inside\n## MY_GREAT_SECRET environment variable\nimagePullCredentials: \"{{ env `MY_GREAT_SECRET` }}\"\n</code></pre></p> </li> </ol>"},{"location":"reference/environment/kubernetes/#compatibility","title":"Compatibility","text":"<code>linux</code> <code>windows</code> / /"},{"location":"reference/environment/local/","title":"Local environment","text":"<p>A local environment is executed on the host itself (same host on which Bifr\u00f6st is running).</p> <p>Currently, we support different variants provided by the host operating system which is executing the environment.</p> <p>Type identifier is <code>local</code>.</p>"},{"location":"reference/environment/local/#linux","title":"Linux","text":"<p>The Linux variant is only supported by Linux based operating systems.</p> <p>It can run as the Bifr\u00f6st user itself, but can also impersonate another user.</p> <p>Note</p> <p>If impersonating another user Bifr\u00f6st is running at, root permissions are required.</p>"},{"location":"reference/environment/local/#linux-user-requirement","title":"User requirement","text":"<p>Users have to fulfill the defined requirements (<code>name</code>, <code>displayName</code>, <code>uid</code>, <code>group</code>, <code>groups</code>, <code>shell</code>, <code>homeDir</code> and <code>skel</code>).</p> <p>If a user does not fulfill this requirement they are not eligible for the environment. The environment can create a user (<code>createIfAbsent</code> = <code>true</code>) or even updates an existing one (<code>updateIfDifferent</code> = <code>true</code>) to match this requirement. This does not make a lot of sense for local users; but for users authorized via OIDC - which usually do not exist locally.</p> <p>See the evaluation matrix of <code>createIfAbsent</code> and <code>updateIfDifferent</code> to see the actual reactions of the local environment per users requirement evaluation state.</p>"},{"location":"reference/environment/local/#linux-configuration","title":"Configuration","text":""},{"location":"reference/environment/local/#linux-property-type","title":"<code>type</code>","text":"<p>Environment Type  = <code>\"local\"</code></p> <p>Has to be set to <code>local</code> to enable the local environment.</p>"},{"location":"reference/environment/local/#linux-property-loginAllowed","title":"<code>loginAllowed</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>Has to be true (after being evaluated) that the user is allowed to use this environment.</p>"},{"location":"reference/environment/local/#linux-property-loginAllowed-examples","title":"Examples","text":"<ol> <li> <p>Require that the existing local user has the group <code>ssh</code>:    <pre><code>loginAllowed: |\n   {{ or\n       (.authorization.user.group.name | eq \"ssh\" )\n       (.authorization.user.groups     | firstMatching `{{.name | eq \"ssh\"}}`)\n   }}\n</code></pre></p> </li> <li> <p>Require that the user authorized via OIDC has in the group <code>my-great-group-uuid</code> and the tenant ID (<code>tid</code>) in this OIDC ID token:    <pre><code>loginAllowed: |\n   {{ and\n      (.authorization.idToken.groups | has \"my-great-group-uuid\")\n      (.authorization.idToken.tid    | eq  \"my-great-tenant-uuid\")\n   }}\n</code></pre></p> </li> </ol>"},{"location":"reference/environment/local/#linux-property-name","title":"<code>name</code>","text":"<p>string  Authorization </p> <p>The username the user should have. Empty means this requirement won't be evaluated or applied (in case of creation/modification of a user).</p>"},{"location":"reference/environment/local/#linux-property-name-examples","title":"Examples","text":"<ol> <li>Use the name of the local user:    <pre><code>name: \"{{.authorization.user.name}}\"\n</code></pre></li> <li>Use the email address of the user authorized via OIDC:    <pre><code>name: \"{{.authorization.idToken.email}}\"\n</code></pre></li> <li>Always use <code>foobar</code>:    <pre><code>name: \"foobar\"\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#linux-property-displayName","title":"<code>displayName</code>","text":"<p>string  Authorization </p> <p>The display name (or title or GECOS) the user should have.</p>"},{"location":"reference/environment/local/#linux-property-name-examples","title":"Examples","text":"<ol> <li>In case of local user should be never be defined.</li> <li>Use the e-mail address of the user authorized via OIDC:    <pre><code>displayName: \"{{.authorization.idToken.name}}\"\n</code></pre></li> <li>Always use <code>Foobar</code>:    <pre><code>displayName: \"Foobar\"\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#linux-property-uid","title":"<code>uid</code>","text":"<p>uint32  Authorization </p> <p>The UID (user identifier) the user should have. Empty means this requirement won't be evaluated or applied (in case of creation/modification of a user).</p>"},{"location":"reference/environment/local/#linux-property-uid-examples","title":"Examples","text":"<ol> <li>Use the name of the local user:    <pre><code>uid: \"{{.authorization.user.uid}}\"\n</code></pre></li> <li>In case of users authorized via OIDC this should usually not be defined.</li> <li>Always use <code>123</code>:    <pre><code>uid: 123\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#linux-property-group","title":"<code>group</code>","text":"<p>Group </p> <p>The primary group the user should have. Empty means this requirement won't be evaluated or applied (in case of creation/modification of a user).</p>"},{"location":"reference/environment/local/#linux-property-group-examples","title":"Examples","text":"<ol> <li>If local user is used, this should usually not be defined.</li> <li>Assign always group with name <code>oidc</code> in case of users authorized via OIDC:    <pre><code>group:\n  name: \"oidc\"\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#linux-property-groups","title":"<code>groups</code>","text":"<p>[]Group </p> <p>The groups (do not confuse with the primary group) the user should have. Empty means this requirement won't be evaluated or applied (in case of creation/modification of a user).</p>"},{"location":"reference/environment/local/#linux-property-groups-examples","title":"Examples","text":"<ol> <li>If local user is used, this should usually not be defined.</li> <li>Assign always group with name <code>oidc</code> in case of users authorized via OIDC:    <pre><code>groups:\n  - name: \"oidc\"\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#linux-property-shell","title":"<code>shell</code>","text":"<p>File Path Authorization  = <code>\"/bin/sh\"</code></p> <p>The shell the user should have. Not defined means this requirement won't be evaluated or applied (in case of creation/modification of a user).</p>"},{"location":"reference/environment/local/#linux-property-homeDir","title":"<code>homeDir</code>","text":"<p>File Path Authorization  = <code>\"/home/&lt;user.name&gt;\"</code></p> <p>The home directory the user should have. Not defined means this requirement won't be evaluated or applied (in case of creation/modification of a user).</p>"},{"location":"reference/environment/local/#linux-property-skel","title":"<code>skel</code>","text":"<p>File Path Authorization  = <code>\"/etc/skel\"</code></p> <p>If a new user needs to be created in a directory on the Bifr\u00f6st hosts, it will receive its initial files of its home directory from (= user's home skeleton/template directory).</p>"},{"location":"reference/environment/local/#linux-property-createIfAbsent","title":"<code>createIfAbsent</code>","text":"<p>string  Authorization = <code>false</code></p> <p>Will create the local user if it does not exist to match the provided requirements (see below). If this property is <code>false</code> the user has to exist, otherwise the execution will fail and the connection will be closed immediately.</p> <p>This property (together with <code>updateIfDifferent</code>) has to be <code>true</code> if you're using authorizations like OIDC, where the user is not expected to exist locally, and you don't want to create each user individually.</p>"},{"location":"reference/environment/local/#linux-property-createIfAbsent-evaluation","title":"Evaluation","text":"<code>createIfAbsent</code> = <code>false</code> = <code>true</code> Exists and matches  Accepted  Accepted Exists, but does not match Does not apply Does not apply Does not exist  Rejected  Created and accepted"},{"location":"reference/environment/local/#linux-property-updateIfDifferent","title":"<code>updateIfDifferent</code>","text":"<p>bool  Authorization = <code>false</code></p> <p>If an existing user does not match the provided requirements (see below) and the property is <code>true</code>, this user is asked to match the requirements.</p> <p>This property (together with <code>createIfAbsent</code>) should be <code>true</code> if you're using authorizations like OIDC, where the user is not expected to exist locally, and you don't want to create each user individually.</p>"},{"location":"reference/environment/local/#linux-property-updateIfDifferent-evaluation","title":"Evaluation","text":"<code>updateIfDifferent</code> = <code>false</code> = <code>true</code> Exists and matches  Accepted  Accepted Exists but does not match  Rejected  Modified and accepted Does not exist Does not apply Does not apply"},{"location":"reference/environment/local/#linux-property-banner","title":"<code>banner</code>","text":"<p>string  Authorization = <code>\"\"</code></p> <p>Will be displayed to the user upon connection to its environment.</p>"},{"location":"reference/environment/local/#linux-property-banner-examples","title":"Examples","text":"<ol> <li>If local user is used, show its name in a message:    <pre><code>banner: \"Hello, {{.authorization.user.name}}!\\n\"\n</code></pre></li> <li>If users authorized via OIDC is used, show its name in a message:    <pre><code>banner: \"Hello, {{.authorization.idToken.name}}!\\n\"\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#linux-property-portForwardingAllowed","title":"<code>portForwardingAllowed</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>If <code>true</code>, users are allowed to use SSH's port forwarding mechanism.</p>"},{"location":"reference/environment/local/#linux-property-dispose","title":"<code>dispose</code>","text":"<p>Dispose</p> <p>Defines what happens if an environment is disposed.</p>"},{"location":"reference/environment/local/#linux-examples","title":"Examples","text":"<ol> <li>Use existing UNIX user:    <pre><code>type: local\nname: \"{{.authorization.user.name}}\"\n</code></pre></li> <li>OIDC - create/modify user if absent/different and cleanup automatically:    <pre><code>type: local\n\n## Ensure users get created/modified if absent/different...\ncreateIfAbsent: true\nupdateIfDifferent: true\n\n## Use the email address of the OIDC's ID token\nname: \"{{.authorization.idToken.email}}\"\n\n## Use the display name of the OIDC's ID token\ndisplayName: \"{{.authorization.idToken.name}}\"\n\ngroups:\n  ## Ensure user has always the group `oidc` assigned for better access control\n  ## on the host itself.\n  - name: oidc\n\nshell: \"/bin/bash\"\n\n## Only allow login if the OIDC's groups has \"my-great-group-uuid\"\n## ...and the tid (tenant ID) is \"my-great-tenant-uuid\"\nloginAllowed: |\n    {{ and\n      (.authorization.idToken.groups | has \"my-great-group-uuid\")\n      (.authorization.idToken.tid    | eq  \"my-great-tenant-uuid\")\n    }}\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#linux-group","title":"Group","text":""},{"location":"reference/environment/local/#linux-group-property-name","title":"<code>name</code>","text":"<p>string  Authorization</p> <p>The name the group should have. Empty means this requirement won't be evaluated or applied (in case of creation/modification of a user).</p>"},{"location":"reference/environment/local/#linux-group-property-name-examples","title":"Examples","text":"<ol> <li>In case of local user this should usually not be used.</li> <li>Use the email address of the user authorized via OIDC always set the name <code>oidc</code>:    <pre><code>name: \"oidc\"\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#linux-group-property-gid","title":"<code>gid</code>","text":"<p>uint32  Authorization</p> <p>The GID (group identifier) the group should have. Empty means this requirement won't be evaluated or applied (in case of creation/modification of a user).</p>"},{"location":"reference/environment/local/#linux-group-property-gid-examples","title":"Examples","text":"<ol> <li>Always use <code>123</code> <pre><code>gid: 123\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#linux-dispose","title":"Dispose","text":"<p>Defines the behavior of an environment on disposal (cleanup).</p>"},{"location":"reference/environment/local/#linux-dispose-property-deleteManagedUser","title":"<code>deleteManagedUser</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>If <code>true</code> the environment will also delete users, created/managed by it. Usually, if <code>createIfAbsent</code> and <code>updateIfDifferent</code> is both <code>false</code> this has no effect.</p>"},{"location":"reference/environment/local/#linux-dispose-property-deleteManagedUserHomeDir","title":"<code>deleteManagedUserHomeDir</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>In combination with <code>deleteManagedUser</code>, if <code>true</code> the environment will also delete the user's home directory.</p>"},{"location":"reference/environment/local/#linux-dispose-property-killManagedUserProcesses","title":"<code>killManagedUserProcesses</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>In combination with <code>deleteManagedUser</code>, if <code>true</code> the environment will also kill all user's running processes.</p>"},{"location":"reference/environment/local/#windows","title":"Windows","text":"<p>The Windows variant is only supported by Windows 7+ based operating systems.</p> <p>Warning</p> <p>In contrast to the Linux version this variant CANNOT impersonate. As a consequence, each user session always executes as the user the Bifr\u00f6st process itself runs with.</p> <p>Impersonating on a Windows machine requires either full credentials (password) or another running process the session tokens can be cloned from. As both conflicts how we intend Bifr\u00f6st to work, both solutions leave a lot of use-cases behind. Since it is very \"hacky\", we decided to stick with the simple approach.</p>"},{"location":"reference/environment/local/#windows-configuration","title":"Configuration","text":""},{"location":"reference/environment/local/#windows-property-type","title":"<code>type</code>","text":"<p>Environment Type  = <code>\"local\"</code></p> <p>Has to be set to <code>local</code> to enable the local environment.</p>"},{"location":"reference/environment/local/#windows-property-loginAllowed","title":"<code>loginAllowed</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>Has to be true (after being evaluated) that the user is allowed to use this environment.</p>"},{"location":"reference/environment/local/#windows-property-loginAllowed-examples","title":"Examples","text":"<ol> <li>Require that the user authorized via OIDC has in the group <code>my-great-group-uuid</code> and the tenant ID (<code>tid</code>) in this OIDC ID token:    <pre><code>loginAllowed: |\n   {{ and\n      (.authorization.idToken.groups | has \"my-great-group-uuid\")\n      (.authorization.idToken.tid    | eq  \"my-great-tenant-uuid\")\n   }}\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#windows-property-banner","title":"<code>banner</code>","text":"<p>string  Authorization</p> <p>Will be displayed to the user upon connection to its environment.</p>"},{"location":"reference/environment/local/#windows-property-banner-examples","title":"Examples","text":"<ol> <li>If users authorized via OIDC is used, show its name in a message:    <pre><code>banner: \"Hello, {{.authorization.idToken.name}}!\\n\"\n</code></pre></li> </ol>"},{"location":"reference/environment/local/#windows-property-shellCommand","title":"<code>shellCommand</code>","text":"<p>string  Authorization = </p> <pre><code>[\"C:\\\\WINDOWS\\\\system32\\\\cmd.exe\"]\n</code></pre> <p>The shell which is used to execute the user's session.</p>"},{"location":"reference/environment/local/#windows-property-execCommandPrefix","title":"<code>execCommandPrefix</code>","text":"<p>string  Authorization = </p> <pre><code>[\"C:\\\\WINDOWS\\\\system32\\\\cmd.exe\", \"/C\"]\n</code></pre> <p>The executor command prefix which is used when a user executes a command instead of executing into a shell.</p> <p>If the user will execute <code>ssh foo@bar.com echo \"bar\"</code> on the host <code>C:\\WINDOWS\\system32\\cmd.exe /C 'echo \"bar\"'</code> will be executed.</p>"},{"location":"reference/environment/local/#windows-property-directory","title":"<code>directory</code>","text":"<p>File Path Authorization = </p> <pre><code>\"&lt;working directory of Bifr\u00f6st&gt;\"\n</code></pre> <p>The working directory in which the command will be executed in.</p>"},{"location":"reference/environment/local/#windows-property-portForwardingAllowed","title":"<code>portForwardingAllowed</code>","text":"<p>bool  Authorization = <code>true</code></p> <p>If <code>true</code>, users are allowed to use SSH's port forwarding mechanism.</p>"},{"location":"reference/environment/local/#windows-examples","title":"Examples","text":"<ol> <li>Simple:    <pre><code>type: local\n</code></pre></li> <li>OIDC:    <pre><code>type: local\n\n## Use the PowerShell Core without banner as Shell\nshellCommand: [\"pwsh.exe\", \"-NoLogo\"]\ndirectory: \"C:\\\\my\\\\home\"\n\n## Only allow login if the OIDC's groups has \"my-great-group-uuid\"\n## ...and the tid (tenant ID) is \"my-great-tenant-uuid\"\nloginAllowed: |\n    {{ and\n      (.authorization.idToken.groups | has \"my-great-group-uuid\")\n      (.authorization.idToken.tid    | eq  \"my-great-tenant-uuid\")\n    }}\n</code></pre></li> </ol> <p>`## Compatibility</p> <code>linux</code> <code>windows</code> / / `"},{"location":"reference/session/","title":"Sessions","text":"<p>A session is grouping one or more connections of a user together. This enables the user:</p> <ol> <li>... to connect with several connections to the same environment,</li> <li>... to use the same environment, although all other prior connections are already disconnected, but the timeout of idle sessions is not already reached,</li> <li>... and the authorization more lean by remembering the user by its SSH Public Key instead of (for example of the OpenID Connect Authorization) repeatedly asking the user to go through the authorization flow.</li> </ol>"},{"location":"reference/session/#types","title":"Types","text":"<ol> <li><code>fs</code>: Filesystem (default type)</li> </ol>"},{"location":"reference/session/#examples","title":"Examples","text":"<ol> <li>Using filesystem session:    <pre><code>type: fs\n</code></pre></li> </ol>"},{"location":"reference/session/fs/","title":"Filesystem session","text":"<p>This variant of session is stored on the same local filesystem onb which also Bifr\u00f6st is running.</p>"},{"location":"reference/session/fs/#properties","title":"Properties","text":""},{"location":"reference/session/fs/#property-type","title":"<code>type</code>","text":"<p>Session Type = <code>\"fs\"</code></p> <p>Can be set to <code>fs</code> to enable the filesystem session. If absent, <code>fs</code> is always chosen by default.</p>"},{"location":"reference/session/fs/#property-idleTimeout","title":"<code>idleTimeout</code>","text":"<p>Duration = <code>\"30m\"</code></p> <p>For how long a session can be idle before it will forcibly be closed and disposed and can therefore not be used again. This can extend by actions of the client (regular interactions or keep alive) across all of client's connections.</p>"},{"location":"reference/session/fs/#property-maxTimeout","title":"<code>maxTimeout</code>","text":"<p>Duration = <code>0</code></p> <p>The maximum duration of a session before it will forcibly be closed and disposed regardless whether there are actions or not.</p>"},{"location":"reference/session/fs/#property-maxConnections","title":"<code>maxConnections</code>","text":"<p>uint16 = <code>0</code></p> <p>The maximum amount of parallel connections of one session. Each new connecting connection will be instantly closed.</p>"},{"location":"reference/session/fs/#property-storage","title":"<code>storage</code>","text":"<p>File Path = <code>\"&lt;os specific&gt;\"</code></p> <p>Where the session information is stored locally.</p> <p>The default value is different, depending on the platform Bifr\u00f6st runs on:</p> <ul> <li>Linux: <code>/var/lib/engity/bifroest/sessions</code></li> <li>Window: <code>C:\\ProgramData\\Engity\\Bifroest\\sessions</code></li> </ul>"},{"location":"reference/session/fs/#property-fileMode","title":"<code>fileMode</code>","text":"<p>File Mode = <code>\"0600\"</code></p> <p>All files/directories inside the session storage will be stored with this mode. Directories will always get the executable bit.</p>"},{"location":"reference/session/fs/#compatibility","title":"Compatibility","text":"<code>linux</code> <code>windows</code> / /"},{"location":"reference/templating/","title":"Templating","text":"<p>In many places of the configuration Bifr\u00f6st can not only be customized by using static strings or numbers, but by using templates as well.</p> <p>Bifr\u00f6st uses the template engine of Go. A collection of rather good resources to learn can be found at HashiCrop's Nomand Developer documentation.</p> <p>In the documentation of each Bifr\u00f6st's component you may find the type the icon , followed by the corresponding context object (like Connection or Authorization). The result will be like:</p> <ul> <li> Authorization</li> <li> Connection</li> </ul>"},{"location":"reference/templating/#base-types","title":"Base types","text":"<p>Each base type (string, bool, uint32, ...) has a different handling in edge cases.</p>"},{"location":"reference/templating/#string","title":"string","text":"<p>A template of type String is always rendered to a corresponding string - as it is.</p> <p>Examples:</p> <ul> <li><code>Foo{{ \"Xyz\" }}Bar</code> or will result in <code>FooXyzBar</code>.</li> <li><code>Foo{{ 123 }}Bar</code> or will result in <code>Foo123Bar</code>.</li> </ul>"},{"location":"reference/templating/#bool","title":"bool","text":"<p>A template of type Bool is always rendered into a boolean value (<code>true</code> or <code>false</code>). The following rules are evaluated to decide for either <code>true</code> or <code>false</code>:</p> <ul> <li><code>false</code>: If the value trimmed and converted to lower-cases is one of: <code>false</code>, <code>disabled</code>, <code>0</code>, <code>no</code>, <code>off</code>, &lt;empty&gt;, <code>nil</code> or <code>null</code></li> <li><code>true</code>: Everything else</li> </ul>"},{"location":"reference/templating/#uint32","title":"uint32","text":"<p>A template of type uint32 is always rendered into an unsigned integer with 32 bits value (<code>0</code> or more). An empty value is always assumed as <code>0</code>.</p>"},{"location":"reference/templating/#float32","title":"float32","text":"<p>A template of type float32 is always rendered into a floating point number with 32 bits value (<code>0.0</code> or more). An empty value is always assumed as <code>0</code>.</p>"},{"location":"setup/","title":"Getting started","text":"<p>Bifr\u00f6st is available as a binary for many different platforms, or even as an OCI/Docker image.</p> <p>Before we get started, you need to choose your operating mode. Here are the main differences to help you decide:</p> Criteria On Host In Docker/Container Available features  All (depending on used edition)  All (depending on used edition) Compatibility (os/architecture)  Available for the most amount of different platforms.  Available for the major platforms. Consumption (CPU/RAM/storage)  Lowest possible consumption.  Meaningful overhead, caused virtualization and additional processes. Host integration  It runs directly on the host and has therefore direct access to everything on the host.  If running in privileged mode and all required devices are mounted, same as On host. Host isolation  Possible, but complicated and designed for it.  Maximum possible, by design. Interactions with containers  Full, except if interacting with Docker for Desktop.  Full Installation effort  Minimal  Minimal <p>If you're still not sure that to pick, maybe our Use-Cases will help you.</p>"},{"location":"setup/#installation","title":"Installation","text":"<p>Different guides, for the different ways how to operate Bifr\u00f6st:</p> <ol> <li>On Host</li> <li>In Docker/Container</li> </ol>"},{"location":"setup/#whats-next","title":"What's next?","text":"<p>Read Use-Cases and the configuration documentation to see what you can do more with Bifr\u00f6st.</p>"},{"location":"setup/distribution/","title":"Distributions","text":"<p>Bifr\u00f6st is available in different distributions.</p> <p>On this page you'll find:</p> <ol> <li>Operating Systems<ol> <li>Linux</li> <li>Windows</li> </ol> </li> <li>Packaging<ol> <li>Archives</li> <li>OCI/Docker Images</li> </ol> </li> </ol> Architecture<code>linux</code><code>windows</code>BinaryImageBinaryImage<code>i386</code>////<code>amd64</code>////<code>armv6</code>////<code>armv7</code>////<code>arm64</code>////<code>mips64le</code>////<code>riscv64</code>//// <p>Cells express support in format of <code>&lt;generic&gt;</code>/<code>&lt;extended&gt;</code>.</p>"},{"location":"setup/distribution/#os","title":"Operating Systems","text":"<p>Bifr\u00f6st is currently available for Linux and Windows.</p>"},{"location":"setup/distribution/#linux","title":"Linux","text":""},{"location":"setup/distribution/#linux-generic","title":"Generic","text":"<p>The generic Linux distribution of Bifr\u00f6st contains features that run on every Linux distribution, regardless of Ubuntu, Alpine, RedHat, ... It does not even have any requirements on which other shared libraries need to be installed. On the other hand, it lacks some features of the extended version.</p>"},{"location":"setup/distribution/#linux-extended","title":"Extended","text":"<p>The extended Linux distribution of Bifr\u00f6st currently only runs on Debian 12+, Ubuntu 22.04+ and Fedora 39+.</p> <p>It does provide the following features:</p> <ol> <li>PAM authentication via Local authorization</li> </ol>"},{"location":"setup/distribution/#dependencies","title":"Dependencies","text":"Name Shared-Lib Version GNU C Library (glibc) <code>libc.so.6</code> 2.34+ Linux PAM (Pluggable Authentication Modules for Linux) <code>libpam.so.0</code> 1.4+"},{"location":"setup/distribution/#installation","title":"Installation","text":"<ul> <li>Debian/Ubuntu: Usually installed by default, in some cases the following command might be necessary:    <pre><code>sudo apt install libpam0g -y\n</code></pre></li> <li>RedHat/Fedora: Already installed by default.</li> </ul>"},{"location":"setup/distribution/#windows","title":"Windows","text":""},{"location":"setup/distribution/#windows-generic","title":"Generic","text":"<p>The generic Windows distribution of Bifr\u00f6st contains all supported features for Windows from Windows 7+ on. It does not even have any requirements on which other shared libraries need to be installed.</p>"},{"location":"setup/distribution/#windows-extended","title":"Extended","text":"<p>Not available.</p>"},{"location":"setup/distribution/#packaging","title":"Packaging","text":"<p>Bifr\u00f6st can be either obtained as Archive which contains the binaries or as OCI/Docker images.</p>"},{"location":"setup/distribution/#archive","title":"Archives","text":"<p>Archives contain for every supported operating systems and architecture the binary of Bifr\u00f6st itself with a basic README, licence information and demo material. It can be simply downloaded, extracted and run.</p> <p>See the release page for all available downloads.</p>"},{"location":"setup/distribution/#archive-matrix","title":"Matrix","text":"Architecture<code>linux</code><code>windows</code><code>i386</code>//<code>amd64</code>//<code>armv6</code>//<code>armv7</code>//<code>arm64</code>//<code>mips64le</code>//<code>riscv64</code>//"},{"location":"setup/distribution/#archive-syntax","title":"URL Syntax","text":"<ul> <li>Linux:     <pre><code>https://github.com/engity-com/bifroest/releases/download/v0.5.10/bifroest-linux-&lt;arch&gt;-&lt;edition&gt;.tgz\n</code></pre></li> <li>Windows:     <pre><code>https://github.com/engity-com/bifroest/releases/download/v0.5.10/bifroest-windows-&lt;arch&gt;-&lt;edition&gt;.zip\n</code></pre></li> </ul>"},{"location":"setup/distribution/#archive-examples","title":"Examples","text":"<ul> <li> <p>Linux Extended on AMD64:     <pre><code>curl -sSLf https://github.com/engity-com/bifroest/releases/download/v0.5.10/bifroest-linux-amd64-extended.tgz | sudo tar -zxv -C /usr/bin bifroest\n</code></pre></p> </li> <li> <p>Windows Generic on AMD64:     Run elevated<pre><code>mkdir -Force 'C:\\Program Files\\Engity\\Bifroest'\ncurl -sSLf -o \"${Env:Temp}\\bifroest.zip\" https://github.com/engity-com/bifroest/releases/download/v0.5.10/bifroest-windows-amd64-generic.zip\nExpand-Archive \"${Env:Temp}\\bifroest.zip\" -DestinationPath 'C:\\Program Files\\Engity\\Bifroest'\n</code></pre></p> </li> </ul>"},{"location":"setup/distribution/#image","title":"OCI/Docker Images","text":"<p>Bifr\u00f6st is also available in OCI/Docker images. You just need to mount a valid configuration into the container.</p> <p>See the container registry page for all available tags.</p>"},{"location":"setup/distribution/#image-matrix","title":"Matrix","text":"Architecture<code>linux</code><code>windows</code><code>i386</code>//<code>amd64</code>//<code>armv6</code>//<code>armv7</code>//<code>arm64</code>//<code>mips64le</code>//<code>riscv64</code>//"},{"location":"setup/distribution/#image-syntax","title":"TAG Syntax","text":"<ul> <li> <p>Generic:     <pre><code>ghcr.io/engity-com/bifroest:generic-&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;\nghcr.io/engity-com/bifroest:generic-&lt;major&gt;.&lt;minor&gt;\nghcr.io/engity-com/bifroest:generic-&lt;major&gt;\nghcr.io/engity-com/bifroest:generic\nghcr.io/engity-com/bifroest:&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;\nghcr.io/engity-com/bifroest:&lt;major&gt;.&lt;minor&gt;\nghcr.io/engity-com/bifroest:&lt;major&gt;\nghcr.io/engity-com/bifroest:latest\n</code></pre></p> </li> <li> <p>Extended:     <pre><code>ghcr.io/engity-com/bifroest:extended-&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;\nghcr.io/engity-com/bifroest:extended-&lt;major&gt;.&lt;minor&gt;\nghcr.io/engity-com/bifroest:extended-&lt;major&gt;\nghcr.io/engity-com/bifroest:extended\n</code></pre></p> </li> </ul>"},{"location":"setup/distribution/#image-examples","title":"Examples","text":"<pre><code>ghcr.io/engity-com/bifroest:0.5.10\nghcr.io/engity-com/bifroest:latest\nghcr.io/engity-com/bifroest:extended\n</code></pre>"},{"location":"setup/in-docker/","title":"Installing in Docker","text":"<p>Tip</p> <p>This guide shows how to install Bifr\u00f6st in Docker/Container. If you like to use Bifr\u00f6st directly on your Host, see its documentation here.</p>"},{"location":"setup/in-docker/#before-we-start","title":"Before we start","text":"<p>Be sure Bifr\u00f6st is supporting your Docker host, by checking the following matrix:</p> <p>Cells express support in format of <code>&lt;generic&gt;</code>/<code>&lt;extended&gt;</code>. See our documentation of distributions of Bifr\u00f6st to learn more.</p> Architecture<code>linux</code><code>windows</code><code>i386</code>//<code>amd64</code>//<code>armv6</code>//<code>armv7</code>//<code>arm64</code>//<code>mips64le</code>//<code>riscv64</code>// <p>In the majority of the cases you might run Linux or Windows on AMD64, which is supported.</p>"},{"location":"setup/in-docker/#linux","title":"Linux","text":"<p>Note</p> <p>This guide assumes you have a Linux distribution with systemd running. This reflects the majority of all actual distributions, such as Ubuntu, Debian, Fedora, ...</p> <ol> <li> <p>Ensure you have a working docker instance installed.</p> </li> <li> <p>Configure Bifr\u00f6st. For example download the demo configuration and adjust it to your needs (see documentation of configuration for the documentation about it):    <pre><code>sudo mkdir -p /etc/engity/bifroest/\nsudo curl -sSLf https://raw.githubusercontent.com/engity-com/bifroest/v0.5.10/contrib/configurations/simple-inside-docker.yaml -o /etc/engity/bifroest/configuration.yaml\n# Adjust it to your needs\nsudo vi /etc/engity/bifroest/configuration.yaml\n</code></pre></p> </li> <li> <p>Enable Bifr\u00f6st to always run on your system, by downloading our example service configuration:    <pre><code>sudo curl -sSLf https://raw.githubusercontent.com/engity-com/bifroest/v0.5.10/contrib/systemd/bifroest-in-docker.service -o /etc/systemd/system/bifroest.service\n# Adjust it to your needs\nsudo vi /etc/systemd/system/bifroest.service\n</code></pre></p> </li> <li> <p>Reload the systemd daemon:    <pre><code>sudo systemctl daemon-reload\n</code></pre></p> </li> <li> <p>Enable and start Bifr\u00f6st:    <pre><code>sudo systemctl enable bifroest.service\nsudo systemctl start bifroest.service\n</code></pre></p> </li> <li> <p>If you're using the original demo configuration, Bifr\u00f6st will print a demo password to its log files while startup. You can receive it with the following command:    <pre><code>docker logs bifroest\n</code></pre></p> </li> <li> <p>Now you can log in to Bifr\u00f6st the first time:    <pre><code>ssh demo@localhost\n</code></pre></p> </li> </ol>"},{"location":"setup/in-docker/#windows","title":"Windows","text":"<ol> <li> <p>Ensure you have a working docker instance installed.</p> <p>Note</p> <p>This guide assumes you're running a Linux host of Docker on Docker for Windows (default).</p> <p>Bifr\u00f6st also supports Windows Containers (Windows native). You just have to adjust the path below accordingly.</p> </li> <li> <p>Open a Powershell Terminal with Administrator privileges.</p> </li> <li> <p>Configure Bifr\u00f6st. For example download the demo configuration and adjust it to your needs (see documentation of configuration for the documentation about it):    <pre><code>mkdir -Force 'C:\\ProgramData\\Engity\\Bifroest'\ncurl -sSLf https://raw.githubusercontent.com/engity-com/bifroest/v0.5.10/contrib/configurations/simple-inside-docker-windows.yaml -o 'C:\\ProgramData\\Engity\\Bifroest\\configuration.yaml'\n# Adjust it to your needs\nnotepad 'C:\\ProgramData\\Engity\\Bifroest\\configuration.yaml'\n</code></pre></p> </li> <li> <p>Enable and start Bifr\u00f6st:    <pre><code>docker run -d --restart unless-stopped --name bifroest -p 22:22 -v //var/run/docker.sock:/var/run/docker.sock -v C:\\ProgramData\\Engity\\Bifroest:/etc/engity/bifroest -v C:\\ProgramData\\Engity\\Bifroest:/var/lib/engity/bifroest ghcr.io/engity-com/bifroest:latest run --log.colorMode=always\n</code></pre></p> </li> <li> <p>Now you can log in to Bifr\u00f6st the first time:    <pre><code>ssh demo@localhost\n</code></pre></p> </li> </ol>"},{"location":"setup/in-docker/#whats-next","title":"What's next?","text":"<ul> <li>Configuration details</li> <li>Install on Host</li> </ul>"},{"location":"setup/on-host/","title":"Installing on host","text":"<p>Tip</p> <p>This guide shows how to install Bifr\u00f6st from downloadable archive. If you like to use Bifr\u00f6st inside Docker/Container, see our documentation for OCI/Docker Images.</p>"},{"location":"setup/on-host/#linux","title":"Linux","text":"<p>Note</p> <p>This guide assumes you have a Linux distribution with systemd running. This reflects the majority of all actual distributions, such as Ubuntu, Debian, Fedora, ...</p> <ol> <li> <p>Download Bifr\u00f6st (see release page):</p>"},{"location":"setup/on-host/#syntax","title":"Syntax","text":"<pre><code>curl -sSLf https://github.com/engity-com/bifroest/releases/download/v0.5.10/bifroest-windows-&lt;arch&gt;-&lt;edition&gt;.tgz | sudo tar -zxv -C /usr/bin bifroest\n</code></pre>"},{"location":"setup/on-host/#matrix","title":"Matrix","text":"<p>Cells express support in format of <code>&lt;generic&gt;</code>/<code>&lt;extended&gt;</code>. See our documentation of distributions of Bifr\u00f6st to learn more.</p> <p>Architecture<code>linux</code><code>i386</code>/<code>amd64</code>/<code>armv6</code>/<code>armv7</code>/<code>arm64</code>/<code>mips64le</code>/<code>riscv64</code>/"},{"location":"setup/on-host/#example-linux-amd64","title":"Example - Linux AMD64","text":"<pre><code>curl -sSLf https://github.com/engity-com/bifroest/releases/download/v0.5.10/bifroest-linux-amd64-extended.tgz | sudo tar -zxv -C /usr/bin bifroest\n</code></pre> <li> <p>Configure Bifr\u00f6st. For example download the demo configuration and adjust it to your needs (see documentation of configuration for the documentation about it):    <pre><code>sudo mkdir -p /etc/engity/bifroest/\nsudo curl -sSLf https://raw.githubusercontent.com/engity-com/bifroest/v0.5.10/contrib/configurations/sshd-dropin-replacement.yaml -o /etc/engity/bifroest/configuration.yaml\n# Adjust it to your needs\nsudo vi /etc/engity/bifroest/configuration.yaml\n</code></pre></p> </li> <li> <p>Download our example service configuration:    <pre><code>sudo curl -sSLf https://raw.githubusercontent.com/engity-com/bifroest/v0.5.10/contrib/systemd/bifroest.service -o /etc/systemd/system/bifroest.service\n</code></pre></p> </li> <li> <p>Reload the systemd daemon:    <pre><code>sudo systemctl daemon-reload\n</code></pre></p> </li> <li> <p>Enable and start Bifr\u00f6st:    <pre><code>sudo systemctl enable bifroest.service\nsudo systemctl start bifroest.service\n</code></pre></p> </li> <li> <p>Now you can log in to Bifr\u00f6st the first time:    <pre><code>ssh demo@localhost\n</code></pre></p> </li>"},{"location":"setup/on-host/#windows","title":"Windows","text":"<ol> <li> <p>Open a Powershell Terminal with Administrator privileges.</p> </li> <li> <p>Download and extract Bifr\u00f6st (see release page):</p>"},{"location":"setup/on-host/#syntax_1","title":"Syntax","text":"<pre><code>curl -sSLf https://github.com/engity-com/bifroest/releases/download/v0.5.10/bifroest-windows-&lt;arch&gt;-&lt;edition&gt;.zip -o \"${Env:Temp}\\bifroest.zip\"\nmkdir -Force 'C:\\Program Files\\Engity\\Bifroest'\nExpand-Archive \"${Env:Temp}\\bifroest.zip\" -DestinationPath 'C:\\Program Files\\Engity\\Bifroest'\n</code></pre>"},{"location":"setup/on-host/#matrix_1","title":"Matrix","text":"<p>Cells express support in format of <code>&lt;generic&gt;</code>/<code>&lt;extended&gt;</code>. See our documentation of distributions of Bifr\u00f6st to learn more.</p> <p>Architecture<code>windows</code><code>amd64</code>/<code>arm64</code>/"},{"location":"setup/on-host/#example-windows-amd64","title":"Example - Windows AMD64","text":"<pre><code>curl -sSLf https://github.com/engity-com/bifroest/releases/download/v0.5.10/bifroest-windows-amd64-generic.zip -o \"${Env:Temp}\\bifroest.zip\"\nmkdir -Force 'C:\\Program Files\\Engity\\Bifroest'\nExpand-Archive \"${Env:Temp}\\bifroest.zip\" -DestinationPath 'C:\\Program Files\\Engity\\Bifroest'\n</code></pre> <li> <p>Configure Bifr\u00f6st. For example download the demo configuration and adjust it to your needs (see documentation of configuration for the documentation about it):    <pre><code>mkdir -Force 'C:\\ProgramData\\Engity\\Bifroest'\ncurl -sSLf https://raw.githubusercontent.com/engity-com/bifroest/v0.5.10/contrib/configurations/dummy-windows.yaml -o 'C:\\ProgramData\\Engity\\Bifroest\\configuration.yaml'\n# Adjust it to your needs\nnotepad 'C:\\ProgramData\\Engity\\Bifroest\\configuration.yaml'\n</code></pre></p> </li> <li> <p>Enable and start Bifr\u00f6st:    <pre><code>'C:\\Program Files\\Engity\\Bifroest\\bifroest.exe' service install\n</code></pre></p> </li> <li> <p>Now you can log in to Bifr\u00f6st the first time:    <pre><code>ssh demo@localhost\n</code></pre></p> </li>"},{"location":"setup/on-host/#whats-next","title":"What's next?","text":"<ul> <li>Configuration details</li> <li>Install in Docker</li> </ul>"}]}