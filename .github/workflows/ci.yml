name: Continuous Integration
on:
  push:

  pull_request:
    types:
      - opened
      - reopened

jobs:
  test:
    name: Tests
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install Ubuntu dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt install libpam0g-dev

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest

      - name: Test
        run: |
          mkdir -p var
          go test -v -covermode atomic "-coverprofile=var/profile.cov" ./...

      - name: Send coverage
        if: false
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          goveralls "-coverprofile=profile.cov" "-service=github" "-parallel" "-flagname=go-${{ matrix.os }}"
  package:
    name: Package
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install Ubuntu dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt install libpam0g-dev

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0.17.2

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --snapshot --clean
        env:
          BIFROEST_VENDOR: engity

      - name: Archive package results
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: dist
          path: |
            var/dist/*.tgz*
            var/dist/*.zip*
  doc:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install -r docs/requirements.txt

      - name: Build
        run: |
          mkdocs --color build -c

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: pages deploy --project-name=bifroest-engity-org var/doc
